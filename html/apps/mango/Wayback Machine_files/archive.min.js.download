!function(e){var n={};function t(a){if(n[a])return n[a].exports;var i=n[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:a})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=365)}({363:function(e,n){e.exports="var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function jquery_no_conflict($) {\n  // convenient, no?  Stateless function, global to all Play objects\n  //   eslint-disable-next-line  no-console\n  var log = location.host.substr(0, 4) !== 'www-' ? function () {} : console.log.bind(console);\n\n  /**\n   * Replaces a BookReader fragment string in a URL path with a new fragment,\n   * or adds the path string to the end of the URL if it's not set\n   *\n   * NOTE: BookReader \"fragments\" are not necessarily URL hash fragments,\n   * though they may be stored in the hash.\n   *\n   * @param {String} pathString\n   * @param {String} newFragment\n   * @returns {String}\n   */\n  function replaceBookReaderFragment(pathString, newFragment) {\n    // See http://openlibrary.org/dev/docs/bookurls\n    var fragmentRegex = /(\\/((page|mode|search)\\/[^/?$]+))+\\/?(?=\\?|$)/g;\n\n    if (pathString.match(fragmentRegex)) return pathString.replace(fragmentRegex, '/' + newFragment);\n\n    return (pathString + '/' + newFragment).replace(/\\/+/g, '/');\n  }\n\n  // class memnonic: Archive JS\n\n  var AJS = function () {\n    function AJS() {\n      _classCallCheck(this, AJS);\n    }\n\n    _createClass(AJS, null, [{\n      key: 'tvAD',\n      // NOTE: needs to stay in sync w/ archive.less\n      value: function tvAD(elm) {\n        var in_show = $(elm).parents('.shows');\n        var id = void 0;\n        var chan = void 0;\n        var show = void 0;\n        if (in_show.length) {\n          // see if we've already gotten and displayed the \"Air date\" section...\n          var opened = $(elm).parent().find('.shows');\n          if (opened.length) {\n            // ... yes, simply close/open it\n            opened.toggle();\n            return false;\n          }\n          chan = in_show.attr('data-chan');\n          show = $(elm).text();\n        } else {\n          chan = $(elm).text();\n          id = 'menu-chan-'.concat(chan);\n          var div = $('#' + id);\n          if (div.length) {\n            div.toggle();\n            return false;\n          }\n        }\n\n        var url = location.href + '?channel=' + chan;\n        if (in_show.length) url += '&program='.concat(encodeURIComponent(show));\n        log(url);\n\n        $.get(url, function (htm) {\n          if (in_show.length) {\n            $(elm).parent().append('<div data-chan=\"' + chan + '\" class=\"shows\"><h5>Air date</h5><div>' + htm + '</div></div>');\n          } else {\n            $(elm).parent().append('<div id=\"' + id + '\" data-chan=\"' + chan + '\" class=\"shows\"><h4>Show</h4><div>' + htm + '</div></div>');\n          }\n        });\n\n        return false;\n      } // NOTE: needs to stay in sync w/ archive.less\n\n      /* global  archive_analytics  jwplayer */\n      /* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_modal_add\"] }] */\n\n    }, {\n      key: 'nav_tophat_setup',\n      value: function nav_tophat_setup() {\n        if (!$('#nav-tophat').length) return;\n\n        if (AJS.isTouchDevice()) $('body').addClass('touch');else AJS.logoText();\n\n        $('#nav-tophat').on('show.bs.collapse', function () {\n          return $('#navwrap1').addClass('hatted');\n        }).on('hide.bs.collapse', function () {\n          return $('#navwrap1').removeClass('hatted');\n        });\n\n        $('.navbar a.navia-link').on('click', function navhat_click(evt) {\n          // are we in \"mobile nav / xs width\" mode?\n          var xs = !$('#nav-tophat-helper:visible').length;\n          var hat_open = $('#nav-tophat').hasClass('in');\n          var navlink = this;\n\n          // determine mediatype from either: (1) user hit text or (2) user hit icon\n          var mt = $(evt.target).attr('data-top-kind') || $(evt.currentTarget).attr('data-top-kind');\n\n          var isnow = $('.navbar .dropdown-ia.hatted a').attr('data-top-kind');\n\n          if (!(xs && hat_open && isnow !== mt)) {\n            // show the links for mediatype clicked\n            $('.toprow').hide();\n            $('.toprow.' + mt).show();\n          }\n\n          if (!hat_open) {\n            $('#nav-tophat').collapse('show'); // .. top hat is *not* open.  clicked, so open tophat\n\n            if (AJS.tophat_dont_count_first_open) {\n              delete AJS.tophat_dont_count_first_open;\n            } else if (typeof archive_analytics !== 'undefined') {\n              // log that a user has opened the nav tophat, yayz\n              archive_analytics.send_ping({\n                kind: 'event',\n                ec: 'page_action',\n                ea: 'nav_tophat_galactica',\n                el: location.pathname,\n                cache_bust: Math.random()\n              });\n            }\n          }\n\n          if (typeof isnow !== 'undefined') log('isnow', isnow);\n          log('shouldB', mt);\n\n          if (isnow === mt) {\n            // 2nd click on same mediatype dropdown -- close tophat!\n            $('#nav-tophat').collapse('hide');\n            return false;\n          }\n\n          if (xs && hat_open && isnow !== mt) {\n            // Mobile/xs nav and user has clicked on *another* nav/MT icon.\n            // So we want to (animate) close the tophat, and when closed,\n            // reopen (animate) to the right open tophat -- this is because\n            // mobile/xs makes the tophat heights much more arbitrary\n            // and it looks weird hard jumping to other open area at another height!\n            $('#nav-tophat').one('hidden.bs.collapse', function () {\n              setTimeout(function () {\n                return $(navlink).click();\n              }, 100);\n            });\n            $('#nav-tophat').collapse('hide');\n            return false;\n          }\n\n          $('.navbar .dropdown-ia').removeClass('hatted').has('.' + mt).addClass('hatted');\n          $('#nav-tophat').on('hidden.bs.collapse', function () {\n            return $('.navbar .dropdown-ia').removeClass('hatted');\n          });\n\n          // any click makes tophat hide...\n          $(document).one('click.tophat.nixer', function (event) {\n            var $e = $(event.target);\n            // log($e)\n            if ($e.attr('id') === 'nav-wb-url') return; // ... except clicking on wayback machine form input\n            if ($e.is('a')) return; // ... except clicking on a link\n            if ($e.hasClass('item-img') || $e.hasClass('item-ia')) return;\n\n            // NOTE: if not open, we wont hide\n            $('#nav-tophat.in').collapse('hide');\n          });\n\n          return false;\n        });\n      }\n    }, {\n      key: 'isTouchDevice',\n      value: function isTouchDevice() {\n        return 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch;\n      }\n    }, {\n      key: 'footer',\n      value: function footer() {\n        if (!AJS.isTouchDevice() && typeof $.fn.tooltip !== 'undefined') {\n          $('.navbar [data-toggle=\"tooltip\"], .container-ia [data-toggle=\"tooltip\"], #cols [data-toggle=\"tooltip\"], #tvbanner [data-toggle=\"tooltip\"]').tooltip({});\n          // $('body').addClass('glyphs-as-text')\n        }\n      }\n    }, {\n      key: 'wrapdark_watcher',\n      value: function wrapdark_watcher() {\n        // no longer needed/used but has some handy techniques...\n        if (!AJS.$sharedown) {\n          AJS.$sharedown = $('#sharedown');\n          AJS.$wrapdark = $('#wrapdark');\n        }\n\n        // every second, sigh, check/adjust for the wrapdark height\n        if (!AJS.wrapdark_watcher_ptr) AJS.wrapdark_watcher_ptr = setInterval(AJS.wrapdark_watcher, 1000);\n\n        if (!AJS.$sharedown.length || !AJS.$wrapdark.length) {\n          clearInterval(AJS.wrapdark_watcher_ptr);\n          return;\n        }\n\n        var wrapdarkHT = AJS.$sharedown.offset().top + AJS.$sharedown.find('.panel-heading').innerHeight();\n        if (parseInt(AJS.$wrapdark.css('height'), 10) !== wrapdarkHT) {\n          AJS.$wrapdark.css({ height: wrapdarkHT }).show();\n          log('       WRAPDARK-ED to ', wrapdarkHT);\n        }\n      }\n    }, {\n      key: 'mute_click',\n      value: function mute_click() {\n        var mutedNOW = !$.cookie('unmute');\n\n        if (this.emulator) {\n          this.emulator.setMute(!mutedNOW);\n        } else {\n          var player = jwplayer('jw6');\n          if (player) {\n            var volnow = player.getVolume();\n            if (volnow) {\n              AJS.mute_click_prior_volume = volnow;\n              player.setVolume(0);\n            } else {\n              player.setVolume(typeof AJS.mute_click_prior_volume === 'undefined' ? 100 : AJS.mute_click_prior_volume);\n            }\n          }\n        }\n\n        $('#theatre-ia .iconochive-mute, #theatre-ia .iconochive-unmute').toggle();\n\n        if (mutedNOW) {\n          // sounds is off.  make it loud\n          $.cookie('unmute', 1, { path: '/details', expires: 30 });\n        } else {\n          // sounds is on.  mute it!\n          $.cookie('unmute', null, { path: '/details' });\n        }\n\n        return false;\n      }\n    }, {\n      key: 'emulate_setup',\n      value: function emulate_setup(game) {\n        // eslint-disable-next-line  no-param-reassign\n        game.toString = function () {\n          return game.identifier;\n        };\n        AJS.emulator = new IALoader($('#canvas').get(0), game, null, game.scale ? parseFloat(game.scale) : 1, game.module.indexOf('dosbox') === 0 ? '/images/dosbox.png' : '/images/mame.png');\n\n        $('#theatre-ia .iconochive-unmute, #theatre-ia .iconochive-mute').hide();\n        if ($.cookie('unmute')) {\n          $('#theatre-ia .iconochive-unmute').show();\n          AJS.emulator.unmute();\n        } else {\n          $('#theatre-ia .iconochive-mute').show();\n          AJS.emulator.mute();\n        }\n\n        AJS.theatre_controls_position();\n        $(window).on('resize  orientationchange', function () {\n          clearTimeout(AJS.theatre_controls_position_throttler);\n          AJS.theatre_controls_position_throttler = setTimeout(AJS.theatre_controls_position, 250);\n        });\n      }\n    }, {\n      key: 'emulate',\n      value: function emulate() {\n        /* global  canvas  IALoader  DOSBOX  JSMESS  Module */\n\n        // move the virtual keyboard thing and give it a \"go away!\" button\n        $('.ui-keyboard').prepend('\\n        <button style=\"position:relative;top:-5px;right:-8px;\" type=\"button\" class=\"close\"\\n                onclick=\"$(\\'.ui-keyboard\\').removeClass(\\'showing\\').hide()\" aria-hidden=\"true\">\\n          <span class=\"iconochive-remove-circle\"></span></button>').appendTo($('#emulate .posrel')).addClass('showing');\n\n        $('#jsmessSS').fadeOut('slow');\n        $('#canvasholder').css('visibility', 'visible');\n        AJS.emulator.start({ hasCustomCSS: true });\n\n        // setup the theatre-ia fullscreen button\n        var EM = JSMESS || DOSBOX || false;\n        if (EM && (canvas.webkitRequestFullScreen || canvas.mozRequestFullScreen || canvas.requestFullScreen)) {\n          $('#gofullscreen').on('click', function () {\n            return Module.requestFullScreen(1, 0);\n          });\n          /**/if ('onfullscreenchange' in document) document.addEventListener('fullscreenchange', EM.fullScreenChangeHandler);else if ('onmozfullscreenchange' in document) document.addEventListener('mozfullscreenchange', EM.fullScreenChangeHandler);else if ('onwebkitfullscreenchange' in document) document.addEventListener('webkitfullscreenchange', EM.fullScreenChangeHandler);\n        }\n\n        setTimeout(AJS.theatre_controls_position, 100);\n        setTimeout(AJS.theatre_controls_position, 500);\n        setTimeout(AJS.theatre_controls_position, 3000);\n        setTimeout(AJS.theatre_controls_position, 10000);\n\n        return false;\n      }\n    }, {\n      key: 'theatre_controls_position',\n      value: function theatre_controls_position($selectorIn, pegTop, widthIn, heightIn) {\n        // We have lots of callers!  video, software, texts.\n        // So sort out our args and where we gonna \"peg\"/glue things to...\n        var $selector = $selectorIn;\n        var video = heightIn && !$selectorIn;\n        if (!video) {\n          if (!$selectorIn) $selector = $('#canvas'); // software emulation\n          if (!$selector.length) return; // protect against emulated embeds and undef...\n        }\n\n        var height = video ? heightIn : $selector.height();\n        var width = video ? widthIn : $selector.width();\n\n        if (!video && typeof pegTop !== 'undefined') $('#theatre-controls').offset({ top: pegTop });\n\n        // Subtract out the width of the controls to get total amount of black pixels\n        // to the right of the theatre object.\n        // We want to position the controls in the middle of the dark pixels / right gutter!\n        var right_gutter_width = Math.round(($('#theatre-ia-wrap').width() - $('#theatre-controls').width() - width) / 2);\n\n        log('width', width);\n        log('right_gutter_width', right_gutter_width);\n\n        $('#theatre-controls').css({\n          height: height,\n          visibility: 'visible',\n          right: Math.max(20, right_gutter_width / 2)\n        });\n      }\n    }, {\n      key: 'booksize',\n      value: function booksize() {\n        if (!$('#texty').length) return;\n\n        // Use the standard theatresize function\n        AJS.theatresize();\n\n        var pollingMillis = 200;\n\n        // Change the bg in the iframe\n        var $textyiframe = $('#texty iframe');\n        var changeBgColor = function changeBgColor() {\n          var $contentDom = $($textyiframe.get(0).contentDocument);\n          var $match = $contentDom.find('#BookReader');\n          if ($match.length > 0) {\n            $contentDom.find('body, #BookReader').css('background-color', 'transparent');\n            return true;\n          }\n          return false;\n        };\n        if (!changeBgColor()) {\n          var bgColorInterval = setInterval(function () {\n            if (changeBgColor()) clearInterval(bgColorInterval);\n          }, pollingMillis);\n        }\n\n        // Setup the controls\n        // NOTE The attribute data-lendable-book is added in Details.inc\n        var isLendableBook = typeof $('#texty').data('lendable-book') !== 'undefined';\n        if (!isLendableBook && !AJS.booksize_controls_hidden) {\n          AJS.booksize_controls();\n          var bookSizeInterval = setInterval(function () {\n            if (!AJS.booksize_controls_hidden) AJS.booksize_controls();else clearInterval(bookSizeInterval);\n          }, pollingMillis);\n        }\n      }\n\n      // Hides the book controls, per david!\n      // Also positions the \"theatre controls\"\n\n    }, {\n      key: 'booksize_controls',\n      value: function booksize_controls() {\n        var $iframe = $('iframe:first');\n        if (!$iframe.length) return;\n        var $iframeDOM = $($iframe.get(0).contentDocument);\n        if (!$iframeDOM.length) return;\n\n        if (!AJS.booksize_controls_hidden) {\n          if (!$iframeDOM.find('#BRnav').length) {\n            log('BOOK NOT READY YET');\n            return;\n          }\n          if ($iframeDOM.find('#BRtwopageview').length > 0) {\n            // Only hide nav in 2up. Show it in 1up\n            $iframeDOM.find('#BRnav').hide();\n          }\n          AJS.booksize_controls_hidden = true;\n          $('#texty iframe').css('visibility', 'visible');\n          log('BOOK CONTROLS HIDDEN!');\n        }\n\n        $iframeDOM.find('body, #BookReader').css('background-color', 'transparent');\n\n        // now position the theatre controls\n        var $book = $iframeDOM.find('#BRtwopageview, #BRpageview');\n\n        // compute where the logical top point should be for the book and for the controls\n        // (which is comparable to A/V items)\n        var $navbar = $('.navbar');\n        // NOTE: we *do* check the nav top (almost always 0!) for rare cases we have a banner\n        // *ABOVE* the navbar, eg: EOY donate banner campaign (which is above the nav)!\n        var pegTop = $navbar.offset().top + $navbar.height() + parseInt($('#texty').css('padding-top'), 10);\n        AJS.theatre_controls_position($book, pegTop);\n        log('book top', $iframe.offset().top + $book.offset().top, ' -v- pegTop', pegTop);\n\n        // and now dont overflow negative margin-bottom blackness into metadata section\n        $('#theatre-ia').css({ overflow: 'hidden' });\n      }\n    }, {\n      key: 'popcornsize',\n      value: function popcornsize() {\n        var resizer = function resizer() {\n          var metadataHeight = 100; // metadata peekaboo min height!\n          var maxH = $(window).height() - $('iframe:first').offset().top - metadataHeight;\n          var maxW = $('#theatre-ia .row').outerWidth();\n          // make max height at most 16x9 ratio (43px is the popcorn controls height)\n          var WH = { width: maxW, height: Math.min(maxH, maxW * 9 / 16 + 43) };\n          log('popcorn resize: ', WH);\n          $('iframe:first').css(WH); // resize popcorn\n        };\n        resizer(); // page load event is now\n        $(window).on('resize  orientationchange', function () {\n          clearTimeout(AJS.popcorn_throttler);\n          AJS.popcorn_throttler = setTimeout(resizer, 250);\n        });\n      }\n\n      /**\n       * A general purpose theatre sizing function.\n       * It keeps the metadata below the theatre partially visible.\n       * @param {function} onChange - called when size changes\n       * @global AJS.theatresize_maxheight if this is set by another\n       *   part of the code, it will contrain to this max height.\n       */\n\n    }, {\n      key: 'theatresize',\n      value: function theatresize(onChange) {\n        if (!AJS.theatresize_maxheight) AJS.theatresize_maxheight = null;\n        var resizer = function resizer() {\n          var metadataHeight = 100; // metadata peekaboo min height!\n          var maximumHeight = 1000; // don't get larger than this\n          var minHeight = Math.min($(window).width(), 400);\n          var targetHeight = $(window).height() - $('#navwrap1').height() - metadataHeight;\n\n          if (AJS.theatresize_maxheight) targetHeight = Math.min(targetHeight, AJS.theatresize_maxheight);\n\n          targetHeight = Math.max(targetHeight, minHeight);\n          var height = Math.min(targetHeight, maximumHeight);\n          $('#theatre-ia-wrap').addClass('resized').css('height', height);\n\n          if (onChange) onChange($('#theatre-ia-wrap').height());\n        };\n        resizer(); // page load event is now\n        $(window).on('resize  orientationchange', function () {\n          clearTimeout(AJS.theatresize_throttler);\n          AJS.theatresize_throttler = setTimeout(resizer, 250);\n        });\n      }\n\n      /**\n       * Will reduce the vertical size of the carousel once all the images have\n       * downloaded and only if they are all smaller than the current size.\n       * This is a progressive enhancement\n       * @param string selector\n       * @param bool enableThreatreChange\n       */\n\n    }, {\n      key: 'carouselsize',\n      value: function carouselsize(selector, enableThreatreChange) {\n        var $carousel = $(selector);\n        var imagePromises = $carousel.find('img.carousel-image').map(function (i, img) {\n          var promise = $.Deferred();\n          var result = void 0;\n          if (img.complete) {\n            result = promise.resolve(img.naturalHeight).promise();\n          } else {\n            img.addEventListener('load', function () {\n              promise.resolve(img.naturalHeight);\n            });\n            result = promise;\n          }\n          return result;\n        });\n        $.when.apply($, _toConsumableArray(imagePromises)).then(function () {\n          var currHeight = $carousel.height();\n          var maxImageHeight = Math.max.apply(Math, arguments);\n          if (currHeight > maxImageHeight) {\n            $carousel.css('maxHeight', maxImageHeight);\n            if (enableThreatreChange) {\n              AJS.theatresize_maxheight = maxImageHeight;\n              $(window).trigger('resize');\n            }\n          }\n        });\n      }\n    }, {\n      key: 'pause',\n      value: function pause() {\n        var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'jw6';\n\n        var jw = jwplayer(id);\n        if (jw && jw.getState && jw.getState().toLowerCase() === 'playing') jw.pause();\n      }\n    }, {\n      key: 'morf',\n      value: function morf(lnk, switchToA2Z) {\n        // MORe Facets\n        var href = $(lnk).attr('href');\n\n        if (switchToA2Z && switchToA2Z[0] === '-') $.cookie(switchToA2Z.substr(1).concat('A2Z'), 1, { path: '/', expires: 1 });else if (switchToA2Z) $.cookie(switchToA2Z.concat('A2Z'), null, { path: '/', expires: 1 });\n\n        var props = { selectorID: 'morf-modal' };\n        var selector = '#' + props.selectorID;\n\n        var contents = React.createElement(\n          'div',\n          { className: 'modal-dialog' },\n          React.createElement(\n            'div',\n            { className: 'modal-content' },\n            React.createElement(\n              'div',\n              { className: 'modal-header modal-header-std' },\n              React.createElement(\n                'button',\n                { type: 'button', className: 'close', 'data-dismiss': 'modal', 'aria-hidden': 'true' },\n                React.createElement('span', { className: 'iconochive-remove-circle' })\n              ),\n              React.createElement('h2', { className: 'modal-title' })\n            ),\n            React.createElement('div', { className: 'modal-body', id: props.selectorID.concat('-body') })\n          )\n        );\n        if (!$(selector).length) $('body').prepend($('<div id=\"' + props.selectorID + '\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\"/>'));\n\n        ReactDOM.render(contents, $(selector).get(0));\n        $(selector).modal('show');\n\n        ReactDOM.render(React.createElement(AJS.MORFreact, { href: href }), $(selector + '-body').get(0));\n\n        return false;\n      }\n    }, {\n      key: 'add2list',\n      value: function add2list(lnk) {\n        var href = $(lnk).attr('href');\n\n        $.get(href + '&headless=1&titlelist=' + $(lnk).text(), function (htm) {\n          // dynamically add modal to page (if isnt there already)\n          AJS.modal_go(lnk, {\n            title: 'Add To List',\n            headerClass: 'modal-header-new-list',\n            ignore_lnk: true,\n            auto_remove: true,\n            body: htm\n          });\n        });\n\n        return false;\n      }\n    }, {\n      key: 'newlist',\n      value: function newlist(lnk) {\n        var href = $(lnk).attr('href');\n\n        $.get(href.concat('&headless=1'), function (htm) {\n          // dynamically add modal to page (if isnt there already)\n          AJS.modal_go(lnk, {\n            title: 'Create New List',\n            headerClass: 'modal-header-new-list',\n            ignore_lnk: true,\n            body: htm\n          });\n        });\n\n        return false;\n      }\n    }, {\n      key: 'newlist_submit',\n      value: function newlist_submit() {\n        // Strings with SPACE characters will be changed to \"camel case\".\n        // For example:\n        //    \"my LA roadtrip\"\n        // will become:\n        //    \"MyLaRoadtrip\"\n        // Letters, numbers, periods (.), dashes (-), or underscores (_) are ok, but\n        // other characters will be removed.\n        var title = $('#new-list-form input[name=title]').val();\n        if (!title.length) {\n          // eslint-disable-next-line  no-alert\n          alert('Please enter a title for your List');\n          return false;\n        }\n\n        // turn the title into an acceptable identifier\n        // (1) remove any \"bad\" chars\n        // (2) trim any *leading* chars like:  - _ .\n        var cleaned = title.replace(/[^a-zA-Z0-9_\\-.]/g, '').replace(/^[_\\-.]+/, '');\n        log(cleaned);\n\n        if (!cleaned.length) {\n          // eslint-disable-next-line  no-alert\n          alert('Please try another title that contains more alphanumeric characters');\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: 'popover_menu',\n      value: function popover_menu(selector, opts) {\n        // setup options\n        var options = {\n          trigger: 'hover focus click', // make accessible\n          container: selector,\n          content: opts.content,\n          html: true\n          // do not overwrite values given by the 'data-' attribute\n        };if (opts.title) options.title = opts.title;\n        if (opts.placement) options.placement = opts.placement;\n        if (opts.trigger) options.trigger = opts.trigger;\n\n        // setup popover\n        $(selector).popover(options);\n      }\n\n      // makes the tooltip show for picking dates\n\n    }, {\n      key: 'date_switcher',\n      value: function date_switcher(htm) {\n        var selector = '#date_switcher';\n\n        // make a tooltip trigger manually, on hover, but then *hold it showing*\n        // until they leave area *including* tooltip itself\n        $(selector).tooltip({\n          html: true,\n          trigger: 'manual', // we gonna control hover behaviour\n          placement: 'bottom',\n          title: htm\n        }).on('mouseenter focusin', function date_switcher_hover() {\n          // check first if already showing, to avoid \"flickering\" with \"show! .. show!\"\n          if (!$(selector).parent().find('.tooltip').length) $(this).tooltip('show');\n        });\n\n        // the date_switcher lives inside bigger \"sortbar\".  the date changing tooltip\n        // lives inside it (and hangs off it).  So what we *really* want as the trigger\n        // to hide the date change tooltip is the entire sortbar itself.  nice!\n        $('.sortbar').on('mouseleave', function () {\n          log('not hovering sortbar anymore');\n          $(selector).tooltip('hide');\n        });\n\n        $(selector).on('shown.bs.tooltip', function () {\n          // make any link hit change which one is \"in\"\n          // (just before page starts to reload)  finesse!\n          $(selector).parent().find('.date_switcher').on('click', function date_switcher_click() {\n            $(this).parents('.tooltip').find('.date_switcher.in').removeClass('in');\n            $(this).addClass('in');\n          });\n        });\n      }\n\n      // NOTE: UNUSED BUT KEPT IN CASE WE EVER GO BACK FROM NEWER/BETTER CSS-ONLY SOLUTION!\n      //\n      // [ Now we use CSS to (max-/)width C2 and C4 *instead* for a much better user experience\n      //   AND for a more efficient / kinder to browser non-JS solution! ]\n\n    }, {\n      key: 'tiles_to_list',\n      value: function tiles_to_list() {\n        /*\n          First, allow natural HTM/CSS widths of 3 of 5 \"table-cell\" display type columns\n           C1         C234      C5\n           VIEWS  ..  DATE  ..  MT-ICON\n            Compute width of \"C234\" - width of C3/DATE.\n           Split TITLE (C2) and CREATOR (C4) max-width into\n           60% / 40% split of that #pixels.\n        */\n\n        // NOTE: there can be 2+ sets of results on a page -- eg: \"My Library\" page!\n        var selector = AJS.selector();\n        var $selector = $(selector).first();\n        log('lister() SELECTOR', selector);\n\n        var C3 = $selector.find('.results .item-ia:first   .C3').outerWidth();\n        var C234 = $selector.find('.results .item-ia:first .C234').outerWidth();\n\n        // the \"-20\" was empirically observed / made up -- get some science, girl!\n        var availWidth = C234 - C3 - 20;\n        var C2 = Math.max(80, Math.round(0.6 * availWidth));\n        var C4 = Math.max(80, Math.round(0.4 * availWidth));\n        log('C3  ', C3);\n        log('C234', C234);\n        log('C2  ', C2);\n        log('C4  ', C4);\n        log(' ==> availWidth: ', availWidth, '(', C2, '+', C4, ')');\n\n        $selector.find('.results .item-ia .C2').css({ width: C2, 'max-width': C2 });\n        $selector.find('.results .item-ia .C4').css({ width: C4, 'max-width': C4 });\n      }\n\n      // We moved to newer tactic Mar2015...\n      // Pages are emitted by default with body classes \"lists\" and \"showdetails\".\n      // We use JS to toggle/remove them and switch off details or switch to \"tiles\" mode.\n\n    }, {\n      key: 'lists_v_tiles_setup',\n      value: function lists_v_tiles_setup(cookie_range) {\n        // does user have any cookied preferences?\n        var defaults = 'tiles'; // (cookie_range === 'search' ? 'lists' : 'tiles')\n        var prefer = $.cookie('view-' + cookie_range);\n        var showdetails = $.cookie('showdetails-' + cookie_range);\n\n        var checked = showdetails === 'showdetails' || showdetails === null && defaults === 'lists';\n\n        if (prefer === 'lists' || !prefer && defaults === 'lists') {\n          if (checked) return; // perfect, we are already what they want\n          $('body').removeClass('showdetails'); // they dont want full details right now\n        } else {\n          // switch to \"tiles\" mode\n          $('body').removeClass('lists'.concat(checked ? '' : ' showdetails')).addClass('tiles');\n        }\n      }\n    }, {\n      key: 'showdetails_toggle',\n      value: function showdetails_toggle(btn, cookie_range) {\n        var $body = $('body');\n\n        var to = $body.hasClass('showdetails') ? '' : 'showdetails';\n        log('showdetails_toggle() going to: ', to);\n\n        $.cookie('showdetails-' + cookie_range, to, { path: '/', expires: 30, domain: '.archive.org' });\n\n        $body.toggleClass('showdetails');\n      }\n    }, {\n      key: 'tiles_toggle',\n      value: function tiles_toggle(btn, cookie_range) {\n        var $body = $('body');\n\n        var to = $body.hasClass('tiles') ? 'lists' : 'tiles';\n        log('tiles_toggle() going to', to);\n\n        $body.removeClass('lists tiles').addClass(to);\n        AJS.tiler();\n\n        $.cookie('view-' + cookie_range, to, { path: '/', expires: 30, domain: '.archive.org' });\n\n        return false;\n      }\n\n      // Returns one of these, like \"#ikind-[IKIND]\"\n      //\n      // COLLECTION PAGES, ACCOUNT PAGES:\n      //\n      //   #ikind--downloads\n      //   #ikind--titleSorter\n      //   #ikind--publicdate\n      //   #ikind--date\n      //   #ikind--reviewdate\n      //   #ikind--updatedate\n      //   #ikind--creatorSorter\n      //\n      //   #ikind-downloads\n      //   #ikind-titleSorter\n      //   #ikind-publicdate\n      //   #ikind-date\n      //   #ikind-reviewdate\n      //   #ikind-updatedate\n      //   #ikind-creatorSorter\n      //\n      // ACCOUNT PAGES (additionally):\n      //\n      //   #ikind-loans-waiting-list\n      //   #ikind-loans-on-loan\n      //   #ikind-loans-history\n      //\n      // OTHER:\n      //\n      //   #ikind-search              (search)\n      //\n\n    }, {\n      key: 'selector',\n      value: function selector() {\n        var inTab = $('.welcome .tabby.in .tabby-text').first().text().toLowerCase().trim();\n        if (inTab === 'forum' || inTab === 'posts' || inTab === 'about') return false; // no tab of tiles are showing\n\n        var selector = false;\n        if (inTab) {\n          // We want to end up with a selector like:\n          //    #ikind-collections-title\n          //    #ikind--publicdate\n          log('inTab', inTab);\n          var tmp = '#tabby-' + inTab.replace(' ', '-');\n          if (inTab === 'collection' || inTab === 'collections' || inTab === 'uploads' || inTab === 'reviews' || inTab === 'web archives') {\n            selector = '#'.concat($(tmp.concat(' div.ikind.in:first')).attr('id'));\n          } else {\n            var ikind = $(tmp.concat(' .ikind.stealth.in:first')).text().toLowerCase().replace(/ /, '-');\n            selector = '#ikind-' + inTab + (ikind === '' ? '' : '-') + ikind;\n          }\n        } else {\n          // we want to end up with a selector like:\n          //    #ikind-date\n          selector = '#ikind-'.concat($('.ikind.stealth.in:first').text().toLowerCase().replace(/ /, '-'));\n          if (!$(selector).length) selector = '#ikind-search'; // xxx  SHORE THIS UP, GIRL!\n        }\n\n        log('SELECTOR', selector);\n\n        return selector;\n      }\n\n      // function that finds alternate (non-AJS.tiler()) sets of item tiles,\n      // that are laid out in strips/columns and will hide entire columns\n      // if they fall off the right side, in terms of fitting to browser/page width\n\n    }, {\n      key: 'tilebars',\n      value: function tilebars() {\n        // iterate over all row classes that have at least 1 .tilebars .results div in them...\n        $('.row .tilebars').find('.results').parents('.row').each(function (k, row) {\n          var first = false;\n          $(row).find('.results').each(function (key, val) {\n            $(val).show().css({ visibility: 'hidden' });\n            if (!first) first = $(val).offset();\n            if ($(val).offset().top !== first.top) $(val).hide();else $(val).css({ visibility: 'visible' });\n          });\n          // if (first) $(row).find('.tilebars > h4').css({'padding-left':first.left+10})\n        });\n      }\n\n      // adds collection parent hovering image and text to tiles\n\n    }, {\n      key: 'parent_hover',\n      value: function parent_hover($selector) {\n        $selector.find('.item-ia:not(.hov):not(.collection-ia):not(.account-ia)').addClass('hov').mouseover(function (e) {\n          return $(e.currentTarget).find('.item-parent').addClass('hoverin');\n        }).mouseout(function (e) {\n          return $(e.currentTarget).find('.item-parent').removeClass('hoverin');\n        });\n      }\n    }, {\n      key: 'tiler',\n      value: function tiler(selectorIn, noRecall) {\n        var tileMarginH = 30;\n        var tileMarginW = 17;\n\n        // See lister() for why this is able to be commented out now!\n        // $('.results .item-ia .C2, .results .item-ia .C4').css({'width':'','max-width':''});\n        if (!$('body').hasClass('tiles')) {\n          if ($('body').hasClass('showdetails')) $('.sortbar input[name=showdetails]').prop('checked', true);\n          // AJS.lister()\n        }\n\n        var selector = selectorIn || AJS.selector();\n        if (selector === false) return;\n\n        var $selector = $(selector).first();\n        var selectorID = $selector.attr('id');\n        var $parentRow = $selector.parents('.row');\n\n        if (!$('body').hasClass('tiles')) {\n          $parentRow.css({ 'padding-left': '', 'padding-right': '' });\n          return;\n        }\n\n        if (!AJS.tilerPREV) {\n          // first time tiling page!\n          AJS.tilerPREV = {\n            winW: 0,\n            pad: 0,\n            nPerRow: 1,\n            gutter: tileMarginW,\n            tileWidth: AJS.TILE_WIDTH,\n            unsourced: {},\n            firstLeft: 0\n          };\n\n          AJS.parent_hover($selector);\n        }\n\n        if ($(window).width() !== AJS.tilerPREV.winW) {\n          // First time, or page resize/orientation change.\n          // We will effectively \"cache\" all this adjusting computations, so multiple calls to tiler()\n          // can reuse if window width hasnt changed\n          // (for efficiency, eg: many images still slowly loading..)\n          $parentRow.css({ 'padding-left': '', 'padding-right': '' }); // reset (see below)\n          AJS.tilerPREV.firstLeft = 0; // reset (see below)\n\n          var $facets = $parentRow.find('.columns-facets:visible');\n          var facetsWidth = $facets.outerWidth() || 0;\n          if (facetsWidth) facetsWidth += 1 + parseInt($facets.css('padding-right'), 10); // add columns-items gutter\n          var availWidth = $parentRow.width() - facetsWidth;\n          var gutter = availWidth < 400 ? 5 : tileMarginW;\n          var tileWidth = $('.item-ia:first').outerWidth() >= AJS.TILE_WIDTH ? AJS.TILE_WIDTH : AJS.TILE_WIDTH_SMALL;\n          var nPerRow = Math.max(1, Math.floor((availWidth + gutter) / (tileWidth + gutter)));\n          var extra = Math.max(0, availWidth - nPerRow * (tileWidth + gutter) + gutter);\n\n          log('tiling', selectorID, 'parentRowW', $parentRow.width(), 'facetsWidth', facetsWidth, 'availWidth: ', availWidth, 'number per row', nPerRow, '. ', 'With gutter margin', gutter, 'had ', extra, 'extra pixels');\n          AJS.tilerPREV.pad = Math.round(extra / 2);\n\n          AJS.tilerPREV.winW = $(window).width();\n          AJS.tilerPREV.nPerRow = nPerRow;\n          AJS.tilerPREV.gutter = gutter;\n          AJS.tilerPREV.tileWidth = tileWidth;\n        }\n\n        if (AJS.tilerPREV.nPerRow > 1) $parentRow.css({ 'padding-left': AJS.tilerPREV.pad, 'padding-right': AJS.tilerPREV.pad });else AJS.tilerPREV.firstLeft = AJS.tilerPREV.pad;\n\n        var nImgZeroHeight = 0;\n        var nImgZeroHeightAry = [];\n        var maxtop = 0;\n        var tops = { 0: 0 };\n        var lefts = { 0: AJS.tilerPREV.firstLeft };\n        for (var i = 1; i < AJS.tilerPREV.nPerRow; i++) {\n          lefts[i] = lefts[i - 1] + AJS.tilerPREV.gutter + AJS.tilerPREV.tileWidth;\n          tops[i] = 0;\n        }\n\n        // Any item tiles w/ unloaded/set src tags get updated and loaded now!\n        // Only have to do this pass on a swathe of new results (1st page or infin scroll set added)\n        if (!AJS.tilerPREV.unsourced[selectorID]) {\n          log('unsourcing', selectorID);\n          // eslint-disable-next-line  prefer-arrow-callback\n          $selector.find('.item-ia img[source]').each(function tiler_unsourcing(k, v) {\n            $(v).attr({\n              src: $(v).attr('source'),\n              onError: '$(this).attr(\"src\",\"/images/notfound.png\")'\n            }).removeAttr('source');\n          });\n          AJS.tilerPREV.unsourced[selectorID] = 1;\n        }\n\n        AJS.colPREV = -1; // we track where previous tile was placed\n\n        $selector.find('.item-ia').not('.mobile-header').css('visibility', 'hidden').each(function (idx, val) {\n          var $val = $(val);\n          var $valHT = $val.innerHeight();\n          // log('$valHT', $valHT)\n\n          var css = {};\n          {\n            var col = 0;\n            if (AJS.tilerPREV.nPerRow > 1 && idx >= AJS.tilerPREV.nPerRow) {\n              // First, cycle from last placed tile column location to \"first cycled slot\".\n              // (That is, move \"1 to right\" from last placed tile column, but it's a cycle/ring\n              // for final column -- go to 1st column in that case).\n              // Test place new tile *there* (in \"first cycled slot\") UNLESS further ahead in\n              // cycle/ring of other slots, the tile will fit where its BOTTOM will be above where\n              // tile TOP would be in the \"first cycled slot\".\n              // (and pick the \"first\" in such a case if 2+ slots like that)\n              var colTEST = (AJS.colPREV + 1) % AJS.tilerPREV.nPerRow;\n              col = colTEST; // fallback/default\n              var cmpTEST = tops[colTEST] - $valHT; // [slightly more efficient way 2 compare]\n              for (var _i = 0; _i < AJS.tilerPREV.nPerRow; _i++) {\n                if (_i !== colTEST && cmpTEST > tops[_i]) {\n                  col = _i;\n                  break;\n                }\n              }\n            } else {\n              col = idx % AJS.tilerPREV.nPerRow;\n            }\n            AJS.colPREV = col;\n            css.visibility = 'visible';\n            css.top = tops[col];\n            css.left = lefts[col];\n\n            // setup for next tile...\n            tops[col] += $valHT + tileMarginH;\n\n            maxtop = Math.max(maxtop, tops[col]);\n          }\n\n          $val.css(css);\n\n          // track how many tile images are without height\n          // (either not loaded or no CSS height style set if img not loading from DB)\n          var tmp = $val.find('.item-img');\n\n          if (tmp.length && !$val.find('.item-img').height()) {\n            nImgZeroHeight += 1;\n            tmp = $val.attr('data-id');\n            if (tmp) nImgZeroHeightAry.push(tmp);\n          }\n        });\n\n        // we have to manually set the height of the \"selector\"\n        log('maxtop', maxtop);\n        $selector.find('.results').css({ height: maxtop });\n\n        if ($('body').hasClass('manage')) {\n          $('.item-ia:not(.removable)').addClass('removable').append('\\n          <div class=\"xer\" onclick=\"return AJS.unmanage(this)\" title=\"remove item from being submitted to item management\"></div>');\n        }\n\n        if (nImgZeroHeight && !noRecall) {\n          log(nImgZeroHeight, ' img (still w/o height); recall tiler(', selector, ')...', nImgZeroHeightAry.join(','));\n          // recall ourselves, but not more than once every 1.5 seconds!\n          clearTimeout(AJS.tiler_throttler);\n          AJS.tiler_throttler = setTimeout(function () {\n            return AJS.tiler(selector, 0);\n          }, 1500);\n        }\n      }\n    }, {\n      key: 'ikind',\n      value: function ikind(lnk, id) {\n        var idsel = '#' + id;\n        log('ikind', id);\n        $(idsel).parent().find('div.ikind.in').hide();\n        $(idsel).removeClass('hidden').addClass('in').show();\n        $(idsel).parents('.tabby-data').find('a.ikind').removeClass('in');\n\n        $(lnk).addClass('in');\n\n        AJS.tiler(idsel);\n\n        // now select the corresponding element in the shadowing select for mobile\n        var $sel = $(idsel).parents('.tabby-data').find('select.ikind-mobile');\n        var $new = $sel.find('option:contains('.concat($(lnk).text(), ')'));\n        var $now = $sel.find('option:selected');\n        if ($new.text().trim() !== $now.text().trim()) {\n          log('changing ikind mobile now to ', $new.text());\n          AJS.ikind_mobile_change_ignore_next = true;\n          $new.attr('selected', 'selected');\n          // $now.removeAttr('selected')\n        }\n\n        return false;\n      }\n    }, {\n      key: 'ikind_mobile_change',\n      value: function ikind_mobile_change(elm) {\n        if (AJS.ikind_mobile_change_ignore_next) {\n          AJS.ikind_mobile_change_ignore_next = false;\n          return;\n        }\n\n        var $selopt = $(elm).find('option:selected');\n        log('ikind mobile changed to: ', $selopt.text());\n        var $ikinds = $(elm).parents('.tabby-data').find('a.ikind');\n        if (!$ikinds.length) {\n          // NO tabby!  eg: top page or search page\n          $ikinds = $('body').find('a.ikind');\n        }\n\n        if (!$ikinds.length) return; // uho!\n\n        var $ikind = $ikinds.filter(function (k, v) {\n          return $(v).text() === $selopt.text();\n        });\n\n        var href = $ikind.attr('href');\n        log('goto', href);\n\n        if (href) {\n          if (href.substr(0, 1) === '#') {\n            // ACCOUNT PAGE (FOR NOW)!  (STILL USES HASH FOR NOW)\n            $('a.ikind[data-id=' + href.substr(1) + ']').click();\n          } else {\n            location.href = href;\n          }\n        }\n      }\n    }, {\n      key: 'popState',\n      value: function popState(pageType) {\n        // are we watching history.pushState() and history.popState() calls?\n        AJS.pushState = typeof history.pushState !== 'undefined';\n        log('popState(', pageType, ') called, modern browser: ', AJS.pushState ? 'y' : 'n');\n\n        if (pageType) // anything custom we need to do based on pageType?\n          return;\n\n        var tabPick = function tabPick(hash2arg) {\n          var tab = AJS.arg('tab', true);\n          if (tab) tab = '#tabby-' + tab + '-finder';else if (hash2arg) tab = '#tabby-' + hash2arg + '-finder';else tab = '.tabby-default-finder';\n\n          if (AJS.pushState) log('goto tab: ', tab, ' ################################################### STATE');\n          AJS.tabby_no_pushState_next_click = true;\n          $(tab).click();\n        };\n\n        if (AJS.pushState) {\n          // runs on page load or browser \"back\":\n          $(window).on('popstate', function () {\n            return tabPick();\n          });\n        }\n        // else user has an older browser or Opera Mini and doesn't have pushState/popState!\n\n        tabPick();\n      }\n    }, {\n      key: 'tabby',\n      value: function tabby(lnk, id) {\n        log('AJS.tabby()', id);\n        var inTab = id.replace(/tabby-/, '').trim();\n        if (inTab === 'uploads' || inTab === 'reviews' || inTab === 'collections' || inTab === 'loans' || inTab === 'web archives') {\n          // account pages -- we need to fully reload page w/ new/wanted item tiles!\n          return true;\n        }\n\n        // Only collection pages have tabs / proceed\n        // All three tabs have all the markup on the page already.\n        // So, for modern browsers, we will simply switch the visibile\n        // tab and update-in-place the url in the browser url typein\n        // -- WITHOUT refreshing the page.\n\n        $('.tabby-data.in').removeClass('in').hide();\n        $('#' + id).removeClass('hidden').addClass('in').show();\n        $('.tabby').removeClass('in');\n        $(lnk).parents('.tabby').addClass('in');\n\n        if (AJS.tabby_no_pushState_next_click) {\n          delete AJS.tabby_no_pushState_next_click;\n        } else if (AJS.pushState && typeof history.pushState !== 'undefined') {\n          var href = $(lnk).attr('href');\n          var locNOW = location.href;\n          var locNEW = location.protocol.concat('//', location.host, href);\n          if (locNOW !== locNEW) {\n            log('pushState: ', href, ' ################################################### STATE');\n            history.pushState({}, '', locNEW);\n          }\n        }\n\n        if (inTab === 'collection' || inTab === 'about') {\n          // collection pages\n          if (inTab === 'about') AJS.grafs();\n          AJS.tiler();\n        }\n\n        if (AJS.pushState) return false;\n        return true;\n      }\n    }, {\n      key: 'colclick',\n      value: function colclick(e) {\n        var $e = $(e);\n        var id = $e.attr('data-id');\n\n        // *NORMALLY* clicking on a collection tile goes to it.\n        // BUT NOT:\n        //   * in lists mode (only the identifier link does that -- not other data columns!)\n        //   * if in process of removing items (eg: from favorites list)\n        if (id && $('body').hasClass('tiles') && !$e.hasClass('removable')) location.href = '/details/' + id;\n      }\n    }, {\n      key: 'list_remove_item',\n      value: function list_remove_item(xer) {\n        if ($('body').hasClass('lists')) $('.tiles-button:visible').click(); // sorry!  only works in tiles mode now...\n\n\n        if (!xer) {\n          if (!$('.item-ia .xer').length) {\n            // make all items editable\n            $('.item-ia').addClass('removable').append('<div onclick=\"AJS.list_remove_item(this)\" class=\"xer\" alt=\"remove this item from list\" title=\"remove this item from list\"></div>');\n          } else {\n            // cancel editability\n            $('.item-ia').removeClass('removable');\n            $('.item-ia .xer').remove();\n          }\n        } else {\n          // single item is slated for utter destruction from the list...\n          var $item = $(xer).parents('.item-ia');\n          var idX = $item.attr('data-id');\n          var url = location.href.replace(/#.*$/, '').concat('?remove_item=', encodeURIComponent(idX));\n          // Use the most recent update date to help uniquely identify the item!\n          if ($item.attr('data-date')) url += '&data-date=' + $item.attr('data-date');\n          if (AJS.listkind) url += '&kind=' + AJS.listkind;\n          log('GET', url);\n\n          $.get(url, function (htm) {\n            log('GOT', url);\n            log(htm);\n            $item.remove();\n            AJS.tiler();\n          });\n        }\n        return false;\n      }\n\n      // remove an element from a search results page\n\n    }, {\n      key: 'unmanage',\n      value: function unmanage(xer) {\n        $(xer).parent('.item-ia').next().remove(); // remove item list portion\n        $(xer).parent('.item-ia').remove(); // remove item tile portion\n        return false;\n      }\n\n      // submits search results items to item manager for invoking operations on the list\n\n    }, {\n      key: 'manage',\n      value: function manage() {\n        // get list of all (remaining) identifiers in a search results page\n        var ids = $('.item-ia[data-id]').toArray().reduce(function (a, b) {\n          var id = $(b).attr('data-id');\n          if (id === '__mobile_header__') return a;\n          return a.concat(id, ',');\n        }, '');\n        log('MANAGE', ids);\n\n        if (ids !== '') {\n          // now make a form that we can POST to, with all the identifiers,\n          // and post to /manage/ page\n          var $form = $('\\n          <form id=\"manage-ids\" method=\"POST\" action=\"/manage/\"\\n                style=\"visibility:hidden;position:absolute;top:0;left:0;width:1px;height:1px;\">\\n            <input type=\"text\" name=\"identifier\" value=\"' + ids + '\"/>\\n          </form>');\n          $('body').append($form); // NOTE: firefox needs it in DOM to submit\n          $form.submit();\n        }\n        return false;\n      }\n    }, {\n      key: 'head_img_dragdrop_setup',\n      value: function head_img_dragdrop_setup(identifier) {\n        if (AJS.head_img_dragdrop_setup_done) return;\n        log('head_img_dragdrop_setup');\n        AJS.head_img_dragdrop_setup_done = true;\n\n        $('#file-dropper-wrap').bind('mouseenter', function () {\n          log('enter');\n          AJS.head_img_replaceable(identifier);\n          $('#file-dropper').show();\n        }).bind('mouseleave', function () {\n          log('ouddie');\n          if (!AJS.file_picked) $('#file-dropper').hide();\n        });\n\n        $('body').bind('dragover', function (evt) {\n          // enable file dropping\n          log('dragover');\n          evt.stopPropagation();\n          evt.preventDefault();\n\n          AJS.head_img_replaceable(identifier);\n          $('#file-dropper').addClass('drag_over').show();\n          return false;\n        });\n\n        $('body').bind('dragleave', function (evt) {\n          log('dragleave');\n\n          // are we still over a file-dropper div/img?\n          var over = $('#file-dropper-wrap').is(':hover') || $('#file-dropper     ').is(':hover') || $('#file-dropper-img ').is(':hover');\n          var x = evt.pageX || evt.originalEvent.pageX;\n          var y = evt.pageY || evt.originalEvent.pageY;\n          if (!over) {\n            var e = $('#file-dropper-wrap');\n\n            var _e$offset = e.offset(),\n                left = _e$offset.left,\n                top = _e$offset.top;\n\n            if (x >= left && x <= left + e.outerWidth() && y >= top && y <= top + e.outerHeight()) {\n              // still over the file drop target image area!\n              over = true;\n            }\n          }\n          if (!over) {\n            var _e = $('#file-dropper');\n\n            var _e$offset2 = _e.offset(),\n                _left = _e$offset2.left,\n                _top = _e$offset2.top;\n\n            if (x >= _left && x <= _left + _e.outerWidth() && y >= _top && y <= _top + _e.outerHeight()) {\n              // still over the file drop target image area!\n              over = true;\n            }\n          }\n\n          if (!over) $('#file-dropper').removeClass('drag_over').hide();\n        });\n      }\n    }, {\n      key: 'head_img_replaceable',\n      value: function head_img_replaceable(identifier) {\n        // helpfuls:\n        //  https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n        //  http://www.sitepoint.com/html5-ajax-file-upload/\n        if ($('#file-dropper').html().trim() !== '') return;\n\n        $('#file-dropper').show().html('\\n<div>\\n  <button id=\"file-cancel\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"\\n          title=\"cancel file upload\" alt=\"cancel file upload\">\\n    &times;\\n  </button>\\n  <b>\\n    <span style=\"font-size:40px; color:#aaa\" class=\"iconochive-plus-circle\" />\\n  </b><br/>\\n  <b>\\n    Drag & Drop an image file here or\\n  </b>\\n  <button type=\"button\" class=\"btn btn-info btn-xs\" onclick=\"$(\\'#file-selector\\').click();\">\\n    Pick image to upload\\n  </button>\\n  <form method=\"POST\" action=\"/services/post-file.php?submit=1&identifier=' + identifier + '\"\\n        enctype=\"multipart/form-data\" id=\"poster\">\\n    <div class=\"hidden\">\\n      <input id=\"file-selector\" name=\"file\" type=\"file\" accept=\"image/*\"/>\\n    </div>\\n    <input type=\"hidden\" name=\"identifier\" value=\"' + identifier + '\"/>\\n    <input id=\"file-submit\" type=\"submit\" name=\"submit\" value=\"SUBMIT\" class=\"btn btn-success\"/>\\n    <div id=\"file-uploading\">\\n      Uploading your file..\\n    </div>\\n  </form>\\n</div>');\n\n        $('#file-cancel').bind('click', function (evt) {\n          AJS.cancelFile();\n\n          evt.stopPropagation();\n          evt.preventDefault();\n          return false;\n        });\n\n        $.event.props.push('dataTransfer'); // if not set, dataTransfer is not sent\n\n\n        var success = function success() {\n          log('success!');\n          // AJS.cancelFile()\n        };\n\n        // upload an image (typically a collection/list header or account/person profile)  via S3\n        // returns '' on success; else string w/ error/fail reason\n        var uploadFile = function uploadFile() {\n          var fail = false;\n\n          if (typeof XMLHttpRequest === 'undefined') fail = 'browser appears to not have HTML5 functionality';\n\n          if (!fail) fail = AJS.badFile();\n\n          var xhr = new XMLHttpRequest();\n          if (!fail) {\n            log(AJS.file2post);\n            if (!xhr.upload) fail = 'browser submit setup failed';\n          }\n\n          if (fail) return fail;\n\n          // start upload\n          log('post');\n          // if (navigator.userAgent.indexOf('Safari') > 0) xhr.timeout = 10 * 60 * 1000; // 10 min\n          xhr.open('POST', location.protocol.concat('//', location.host, '/services/post-file.php?submit=1&identifier=', identifier, '&fname=', encodeURIComponent(AJS.file2post.name)), false); // block synchronously on the post!\n          // if (!options.sendBoundary) xxx\n          xhr.setRequestHeader('Content-Type', 'multipart/form-data; charset=UTF-8');\n          xhr.send(AJS.file2post);\n\n          var reply = xhr.responseText;\n          var mat = reply.match(/SUCCESS \\(task_id=(\\d+)\\)/);\n          if (mat && mat.length) {\n            var task_id = mat[1];\n            log('STALKING TASK_ID: ', task_id);\n\n            $('#file-dropper').html('waiting for updates..');\n            var stalker_ptr = false;\n            var stalker = function stalker() {\n              log('STALKING...');\n              $.ajax({\n                type: 'GET',\n                url: '/catalog_status.php?where=task_id='.concat(task_id, '&rand=', Math.random()),\n                dataType: 'xml',\n                success: function success(xml) {\n                  log(xml);\n                  var x = {\n                    green: parseInt($(xml).find('wait_admin0').text(), 10) || 0,\n                    blue: parseInt($(xml).find('wait_admin1').text(), 10) || 0,\n                    red: parseInt($(xml).find('wait_admin2').text(), 10) || 0\n                  };\n                  log(x);\n                  var nWait = x.green + x.blue + x.red;\n                  $('#file-dropper').html('waiting for ' + nWait + ' tasks to run');\n                  if (!nWait) {\n                    log('task(s) done!');\n                    clearInterval(stalker_ptr);\n                    $('#file-dropper').html('reloading page with your image');\n                    location.href = location.href; // ready! reload the page!\n                  } else if (x.red) {\n                    $('#file-dropper').html('<div class=\"alert alert-danger\">status task failure -- an admin will need to resolve</div>');\n                    clearInterval(stalker_ptr);\n                  }\n                }\n              });\n            };\n\n            // every 2 seconds, check for status\n            stalker_ptr = setInterval(stalker, 2000);\n          } else {\n            log(reply);\n          }\n\n          log('post done');\n          return '';\n        };\n\n        $('#file-selector').bind('click', function () {\n          AJS.file_picked = 'selected';\n        }).bind('change', function (evt) {\n          log('file dropdown selected!');\n          $('#file-submit, #file-cancel').show();\n          log(evt);\n          if (evt.target && evt.target.files && evt.target.files.length) {\n            var _evt$target$files = _slicedToArray(evt.target.files, 1);\n\n            AJS.file2post = _evt$target$files[0];\n\n            AJS.previewFile();\n          }\n        });\n\n        $('#file-dropper').bind('drop', function (evt) {\n          // we've been dropped a file (from a drag-and-drop)!\n          evt.stopPropagation();\n          evt.preventDefault();\n\n          log(evt.dataTransfer.files);\n          $('#file-dropper').removeClass('drag_over');\n\n          $('#file-submit, #file-cancel').show();\n\n          if (evt.dataTransfer.files.length) {\n            AJS.file_picked = 'dropped';\n\n            var _evt$dataTransfer$fil = _slicedToArray(evt.dataTransfer.files, 1);\n\n            AJS.file2post = _evt$dataTransfer$fil[0];\n\n            AJS.previewFile();\n          }\n        });\n\n        $('#poster').bind('focusin', function (evt) {\n          log(evt.type);\n          $('#file-uploading').show();\n        }).bind('submit', function (evt) {\n          log('submit!');\n          $('#file-uploading').show();\n\n          // First try the schmancy HTML5 submit via XMLHttpRequest and FileReader.\n          // If we fail, we'll fallback to form submit normal action.\n          var fail = uploadFile();\n          if (fail === '') {\n            // SUCCESS!  we are done!\n            success();\n            evt.stopPropagation();\n            evt.preventDefault();\n            return false;\n          }\n\n          if (AJS.file_picked === 'dropped') {\n            // we had client drag-n-drop the file -- we can't post it!\n            // epic fail...\n            AJS.cancelFile();\n            // eslint-disable-next-line  no-alert\n            alert('Failure: ' + fail);\n            evt.stopPropagation();\n            evt.preventDefault();\n            return false;\n          }\n\n          // OK fallback to normal (selected) file submit (and full page reload)!\n          return true;\n        });\n\n        // now center file-dropper over current image\n        var w1 = $('#file-dropper-img').outerWidth();\n        var h1 = $('#file-dropper-img').outerHeight();\n        var w2 = $('#file-dropper').outerWidth();\n        var h2 = $('#file-dropper').outerHeight();\n        $('#file-dropper').css({\n          left: Math.round((w1 - w2) / 2),\n          top: Math.round((h1 - h2) / 2)\n        });\n\n        if (AJS.ios) {\n          $('#file-dropper > form > div.hidden').removeClass('hidden');\n          $('#file-dropper > button').addClass('hidden');\n        }\n      }\n\n      // client-side preview the image directly in the browser!  xxx catch exceptions, etc.\n\n    }, {\n      key: 'previewFile',\n      value: function previewFile() {\n        $('#file-dropper .uppreview').remove(); // remove any prior upload/preview\n\n        if (AJS.badFile()) {\n          AJS.cancelFile();\n          return false;\n        }\n\n        if (typeof FileReader === 'undefined') return false;\n\n        var reader = new FileReader();\n        reader.onload = function (evt) {\n          log(evt.target);\n          var im = new Image();\n          im.src = evt.target.result;\n          $('#file-dropper').append(im);\n          $(im).addClass('uppreview');\n          // $('#file-dropper').css(\n          //      {'background':'url(' + evt.target.result + ') no-repeat center center'})\n        };\n\n        log(AJS.file2post);\n        reader.readAsDataURL(AJS.file2post);\n        return true;\n      }\n    }, {\n      key: 'cancelFile',\n      value: function cancelFile() {\n        $('#file-dropper .uppreview').remove(); // remove any prior upload/preview\n        $('#file-dropper, file-submit, #file-cancel, #file-uploading').hide();\n        if (AJS.file_picked) delete AJS.file_picked;\n        if (AJS.file2post) delete AJS.file2post;\n      }\n    }, {\n      key: 'badFile',\n      value: function badFile() {\n        var fail = false;\n\n        if (!fail && !AJS.file2post) fail = 'file is missing';\n\n        // php upload_max_filesize is 8M\n        if (!fail && AJS.file2post.size > 8000000) fail = 'file is over 8MB in size';\n\n        if (!fail) {\n          var type = AJS.file2post.type.toLowerCase();\n          if (type !== 'image/jpeg' && type !== 'image/png' && type !== 'image/gif') fail = 'file not required format of JPEG or PNG or GIF';\n        }\n\n        if (fail)\n          // eslint-disable-next-line  no-alert\n          alert(fail);\n\n        return fail;\n      }\n\n      // for microfilm books with many months of newspapers in PDF\n      //   eg: /details/la_caleagle_reel1\n      //\n      // paginfo is a logical hashmap JSON object of:\n      //   YYYYMMDD => [comma separated list of pages]\n      // eg:\n      //   20080129 =>  \"1,2,3,11,17\"\n\n    }, {\n      key: 'drawPDF',\n      value: function drawPDF(identifier, pageinfo) {\n        var urlstart = '/download/'.concat(identifier, '/', identifier, '_pdf.zip/', identifier, '_pdf/', identifier, '_');\n        var multi_year = false;\n        var last_year = false;\n\n        // eslint-disable-next-line  guard-for-in\n        for (var key in pageinfo) {\n          var year = key.substr(0, 4);\n          if (last_year === false) last_year = year;\n          if (last_year !== year) {\n            multi_year = true;\n            break;\n          }\n        }\n\n        var sep = '';\n        var str = sep;\n        var lastyearmonth = 666;\n        // eslint-disable-next-line  guard-for-in\n        for (var _key in pageinfo) {\n          // log(key); log(pageinfo[key]);\n          var pages = pageinfo[_key].split(',');\n          var _year = _key.substr(0, 4);\n          var month = parseInt(_key.substr(4, 2), 10);\n          var day = parseInt(_key.substr(6, 2), 10);\n          var yearmonth = _year.concat('-', month);\n          var skip_day = false;\n\n          var monthName = '';\n          if (yearmonth !== lastyearmonth) {\n            /**/if (month === 1) monthName = 'January';else if (month === 2) monthName = 'February';else if (month === 3) monthName = 'March';else if (month === 4) monthName = 'April';else if (month === 5) monthName = 'May';else if (month === 6) monthName = 'June';else if (month === 7) monthName = 'July';else if (month === 8) monthName = 'August';else if (month === 9) monthName = 'September';else if (month === 10) monthName = 'October';else if (month === 11) monthName = 'November';else if (month === 12) monthName = 'December';else if (month === undefined) monthName = 'Single Page PDFs';else /*             */monthName = 'Unknown_'.concat(month);\n\n            if (multi_year) monthName = _year.concat(' ', monthName);\n\n            // make header/a that shows/hides a hidden div after it with the month's data\n            str += str ? '</div>\x3c!--mo--\x3e<br/>' : '';\n            str += '\\n<a href=\"#' + monthName + ',' + _year + '\" onclick=\"$(\\'#m' + yearmonth + '\\').toggle(); return false\">\\n  <span class=\"iconochive-folder\" /> ' + monthName + '\\n</a>\\n<div class=\"mo\" id=\"m' + yearmonth + '\">';\n          }\n\n          // make header/a that shows/hides a hidden div after it with the page data\n          if (day === undefined || day === '') skip_day = true;\n          if (skip_day) {\n            str += '<div class=\"day\">';\n          } else {\n            str += '\\n<div class=\"day\">\\n  <a href=\"#' + yearmonth + '-' + day + '\"\\n     onclick=\"$(\\'#m' + yearmonth + 'd' + day + '\\').toggle();return false;\">\\n    <span class=\"iconochive-folder\" /> ' + day + '\\n  </a>\\n<div class=\"pages\" id=\"m' + yearmonth + 'd' + day + '\">';\n          }\n\n          // drop in the individual page links\n          var offset = 1;\n          var page = void 0;\n          var pnum = void 0;\n          for (var j = 0; j < pages.length; j++) {\n            page = pages[j];\n            if (!page)\n              // eslint-disable-next-line  no-continue\n              continue;\n            if (offset > 0) offset = 1 - page;\n            pnum = parseInt(page, 10) + offset;\n\n            // left 0-pad to 4 digits as needed\n            page = '0000'.concat(page);\n            page = page.substr(page.length - 4, 4);\n\n            var url = urlstart.concat(page, '.pdf');\n            str += '<a href=\"' + url + '\">[' + pnum + ']</a> ';\n          }\n\n          if (skip_day) str += '</div>';else str += '</div>\x3c!--pages--\x3e</div>\x3c!--day--\x3e';\n\n          lastyearmonth = yearmonth;\n        }\n\n        str += '</div>\x3c!--mo--\x3e';\n\n        // replace the \"pdfs\" empty div with our hefty HTML\n        $('#pdfs .replaced').html(str);\n      }\n\n      // for collection pages, [About] tab\n\n    }, {\n      key: 'grafs',\n      value: function grafs() {\n        var $grafs1 = $('#grafs1');\n        var $grafs2 = $('#grafs2');\n        if (!$grafs1.length) return;\n        if (typeof $grafs1.attr('data-id') === 'undefined') return;\n\n        var identifier = $grafs1.attr('data-id');\n        $grafs1.attr('data-id', null);\n\n        log('loading grafs');\n        $grafs1.html('<i><small>loading graph <img src=\"/images/loading.gif\"/></small></i>').show();\n        $grafs2.html('<i><small>loading graph <img src=\"/images/loading.gif\"/></small></i>').show();\n        var tok = '<h2>';\n        $.get('/details/'.concat(identifier, '&grafs=1&v=3'), function (htm) {\n          var a = htm.split(tok);\n          if (a.length >= 3) {\n            $('#activity-reviewsN').html(a[1]).parents('.activity-box').show();\n            $('#activity-forumN  ').html(a[2]).parents('.activity-box').show();\n          }\n          if (a.length === 5) {\n            $grafs1.html(tok + a[3]);\n            $grafs2.html(tok + a[4]);\n          } else {\n            $grafs1.html('(graph data not available)');\n            $grafs2.html('(graph data not available)');\n          }\n        });\n\n        AJS.setUpTopRegionsTable();\n      }\n    }, {\n      key: 'quick_down',\n      value: function quick_down(id, target) {\n        var idsel = '#' + id;\n\n        if (!$('.format-group.in').length) {\n          // no set of files for a single format showing... yet!\n          var format = $(target).text();\n          var $formatGroup = $(idsel).parents('.format-group');\n\n          $('.download-button').html(format.concat(' FILES'));\n          $formatGroup.addClass('in');\n          // hide the other summary formats (one-liner) clickables\n          $('.format-group:not(.in)').slideUp();\n          $(idsel).slideDown();\n        } else {\n          // re-open all the summary formats (one-liner) clickables\n          $('.format-group').slideDown(400);\n          // close the open set of single files\n          setTimeout(function () {\n            // ftw, thx for nothing jquery\n            $('.format-group.in').removeClass('in');\n            $('.download-button').html('DOWNLOAD OPTIONS');\n          }, 400);\n          $(idsel).slideUp();\n        }\n\n        return false;\n      }\n\n      // parse a CGI arg\n\n    }, {\n      key: 'arg',\n      value: function arg(theArgName, try_full) {\n        var sArgs = try_full && location.search === '' ? location.href.slice(1).split('&') : location.search.slice(1).split('&');\n        for (var i = 0; i < sArgs.length; i++) {\n          if (sArgs[i].slice(0, sArgs[i].indexOf('=')) === theArgName) {\n            var r = sArgs[i].slice(sArgs[i].indexOf('=') + 1);\n            return r.length > 0 ? unescape(r).split(',') : '';\n          }\n        }\n        return '';\n      }\n\n      // setup trigger on 1/2 second of hovering over the nav IA logo\n\n    }, {\n      key: 'logoText',\n      value: function logoText() {\n        var hideLogoText = function hideLogoText() {\n          $('#internet-archive').fadeOut('slow', function () {\n            $('#internet-archive').remove();\n            $('#exit-er').show();\n          });\n        };\n\n        var mousetimer = false;\n\n        // axxx make sure when it opens on TAB, the about li is in the DOM *next*\n        $('.navbar-nav:first').on('mouseenter focusin', function (evt) {\n          // Only proceed if user is interacting with the logo elements.\n          if (!$(evt.target).is('ul, .navbar-brand, .iconochive-logo, .logo-text-hider')) return;\n\n          mousetimer = setTimeout(function () {\n            if ($('#internet-archive').length) {\n              hideLogoText();\n              return;\n            }\n\n            $('#exit-er').hide(); // (gets in the way of xs/mobile!)\n            // flank the IA logo!\n            $('.navbar-nav:first').prepend($('\\n<div id=\"internet-archive\" class=\"hidden-xs logo-text-hider\"\\n    style=\"position:absolute; top:10px; width:100%; text-align:center;\">\\n  <div class=\"topinblock logo-text-hider\" style=\"width:100px; padding-left:10px;\">\\n    <div class=\"logo-text-hider\"\\n        style=\"display:none; width:85px; height:30px; background:transparent -35px top no-repeat url(/images/footer.png)\" />\\n  </div><div class=\"topinblock logo-text-hider\" style=\"width:35px;height:1px;\" /><div class=\"topinblock logo-text-hider\" style=\"width:100px;\">\\n    <div class=\"logo-text-hider\" style=\"display:none; width:85px; height:30px; background:transparent -116px top no-repeat url(/images/footer.png)\" />\\n  </div>\\n</div>'));\n\n            // both of the above divs are hidden.  now fade them in\n            $('#internet-archive > div > div').fadeIn('slow');\n          }, 1000);\n        }).mouseleave(function () {\n          if (mousetimer) clearTimeout(mousetimer);\n        });\n      }\n    }, {\n      key: 'scrolled',\n      value: function scrolled() {\n        var newtop = $(window).scrollTop();\n        // log('scrolled to ', newtop)\n\n        var selector = '.more_search:visible';\n        var $e = $(selector);\n        if (!$e.length) return;\n\n        // make the edge detect for \"hit bottom\" 40 pixels from the bottom\n        var check = $e.offset().top + $e.outerHeight() - $(window).height() - 40;\n        // log('-v- check', check)\n        if (newtop > check) {\n          log('hit rock bottom > ', check);\n          if (!AJS.more_searching) $(selector.concat(' > a')).click();\n        }\n      }\n    }, {\n      key: 'more_search',\n      value: function more_search(lnk, urlIn, page_now) {\n        var selector = AJS.selector();\n        if (selector === false) return false;\n\n        var ikind = selector.replace(/#ikind-/, '');\n\n        var $more_search = $(selector.concat(' .more_search'));\n\n        // we stash a reference of what page the client has requested, so we can increment it on\n        // each \"more_search hit\n        var pageKey = selector;\n        if (typeof AJS.page_map[pageKey] === 'undefined') AJS.page_map[pageKey] = page_now || 1;\n\n        if (AJS.page_map[pageKey] < 0) {\n          // $more_search.find('.more-search-all').show()\n          return false; // all results showing -- no more for the ikind avail so noop/ignore\n        }\n\n        AJS.page_map[pageKey] += 1;\n        var page = AJS.page_map[pageKey];\n\n        $more_search.find('.more-search-fetching').show();\n\n        AJS.more_searching = true;\n\n        var url = urlIn + page;\n        var urlreplace = location.protocol.concat('//', location.host, url);\n        url += '&scroll=1';\n\n        log('url: ', url); // url to AJAX get next page\n        log('urlreplace', urlreplace); // url to change browser location (visually) to\n\n\n        log('more_search(selector=', selector, 'sort=', ikind, 'page=', page, 'url=', url, ')');\n        // log(AJS.page_map)\n\n\n        $.get(url, function (htm) {\n          if (htm.length < 100 && $(htm).find('div.no-results')) {\n            // no more results avail/found.  we have reached infinity!\n            $more_search.find('.more-search-fetching, a.btn').hide();\n            // $more_search.find('.more-search-all').show()\n            AJS.page_map[pageKey] = -1; // flag to ignore future more_search attempts\n            AJS.more_searching = false;\n            return;\n          }\n\n          if (AJS.pushState && typeof history.replaceState !== 'undefined') history.replaceState({}, '', urlreplace);\n\n          var selectorID = $(selector).attr('id');\n          if (AJS.tilerPREV && AJS.tilerPREV.unsourced && AJS.tilerPREV.unsourced[selectorID]) delete AJS.tilerPREV.unsourced[selectorID];\n\n          var $selector = $(selector.concat(' .results'));\n          $selector.append(AJS.addNotes(AJS.addingNotesKind, htm));\n\n          // re-tile and re-flow!  (the force should flow through you)\n          AJS.tiler(selector);\n          $more_search.find('.more-search-fetching').hide();\n          AJS.more_searching = false;\n\n          AJS.parent_hover($selector);\n\n          // OK, this is quite a bit more subtle...  the HTM has been dropped in,\n          // *and* we've done a basic re-tiling.  however, it's very likely many\n          // of the images are still loading.  so listen for image \"is loaded\" events\n          // if they trickle in, and at most re-tile every 1 second (even if they\n          // likely trickling in at a faster rate than that) until they all loaded\n          $(selector.concat(' img')).on('load', function () {\n            clearTimeout(AJS.more_search_throttler);\n            AJS.more_search_throttler = setTimeout(AJS.tiler, 1000);\n          });\n\n          if (typeof archive_analytics !== 'undefined') archive_analytics.send_scroll_fetch_event(page);\n        });\n\n        return false;\n      }\n\n      // when embed codes are being shown, adjust their heights so they show all the content/codes!\n\n    }, {\n      key: 'embed_codes_adjust',\n      value: function embed_codes_adjust() {\n        log('showing embeds!');\n\n        // these are found (only) on /details/ pages\n        var _arr = ['embedcodehere', 'embedcodehereWP'];\n        for (var _i2 = 0; _i2 < _arr.length; _i2++) {\n          var embid = _arr[_i2];\n          var $embid = $('#' + embid);\n          $embid.removeAttr('rows').css('height', '');\n\n          var embtxt = $embid.text();\n\n          // this is *puke* city -- since textareas are a PITA, make a shadow div w/ the\n          // text we want in it, trying to be same width, same font-size, etc.\n          // and *then* insert into DOM invisibily so we can calculate its overall height\n          // .. and then peg the textarea height to that height\n          $('body').prepend($('<div/>').attr({\n            id: embid + 'Shadow',\n            class: 'textarea-invert-readonly roundbox5'\n          }).css({\n            position: 'absolute',\n            visibility: 'hidden',\n            top: 60,\n            left: 10,\n            padding: '5px 15px 5px 15px',\n            width: $embid.width(),\n            'font-size': $embid.css('font-size')\n          }).text(embtxt));\n\n          var bestHT = $('#' + embid + 'Shadow').outerHeight() + 15;\n          log(embid, 'bestie height', bestHT, 'for current width', $embid.width());\n          $('#' + embid + 'Shadow').remove();\n\n          $embid.height(bestHT);\n        }\n      }\n\n      /**\n       * A simpler 'one shot' way to dynamically insert a modal and show it on the page.\n       * You can call it w/ a hashmap of optional paramters to make it very easy on caller end to grok\n       * (similar to python's kwargs)\n       *\n       * @param  {String} [prepend='body']        a jQuery selector where to prepend the modal markup\n       * @param  {String} [selector='#my-modal']  a unique id -- is _first_ remove(d), and then added\n       * @param  {String} [title='confirmed']     what title/header should appear\n       * @param  {String} [body='']               text/markup for the modal body\n       * @return n/a\n       */\n\n    }, {\n      key: 'modal',\n      value: function modal() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$prepend = _ref.prepend,\n            prepend = _ref$prepend === undefined ? 'body' : _ref$prepend,\n            _ref$selector = _ref.selector,\n            selector = _ref$selector === undefined ? '#my-modal' : _ref$selector,\n            _ref$title = _ref.title,\n            title = _ref$title === undefined ? 'confirmed' : _ref$title,\n            _ref$body = _ref.body,\n            body = _ref$body === undefined ? '' : _ref$body;\n\n        var id = selector.replace(/#/, '');\n        $(selector).remove();\n        $(prepend).prepend('\\n<div id=\"' + id + '\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\">\\n  <div class=\"modal-dialog modal-lg\">\\n    <div class=\"modal-content\" style=\"padding:10px;\">\\n      <div class=\"modal-header\">\\n        <button\\n          type=\"button\"\\n          class=\"close\"\\n          data-dismiss=\"modal\"\\n          aria-hidden=\"true\">\\n          <span class=\"iconochive-remove-circle\" aria-hidden=\"true\"></span><span class=\"sr-only\">remove-circle</span></button>\\n        <h3 class=\"modal-title\">' + title + '</h3>\\n      </div>\\n      <div id=\"' + id + '-body\">' + body + '</div>\\n    </div>\\n  </div>\\n</div>');\n        $(selector).modal('show');\n      }\n\n      // dynamically adds modal to page (if isnt there already)\n\n    }, {\n      key: '_modal_add',\n      value: function _modal_add(selector, conf) {\n        // logically private\n        log(conf);\n\n        if ($(selector).length) return;\n\n        var selectorID = selector.replace(/#/, '');\n\n        $('body').prepend('\\n<div id=\"' + selectorID + '\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\">\\n  <div class=\"modal-dialog modal-lg\">\\n    <div class=\"modal-content\">\\n      <div class=\"modal-header ' + (conf.headerClass ? conf.headerClass : 'modal-header-std') + '\">\\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\\n          <span class=\"iconochive-remove-circle\"></span>\\n        </button>\\n        <h2 class=\"modal-title\">\\n          ' + (typeof conf.title === 'undefined' ? 'Confirmed' : conf.title) + '\\n        </h2>\\n      </div>\\n      <div id=\"' + selectorID + '-body\">\\n        ' + (typeof conf.body === 'undefined' ? '' : conf.body) + '\\n      </div>\\n    </div>\\n  </div>\\n</div>');\n\n        // $('body').addClass('blurry') // exxxperiment!\n      }\n    }, {\n      key: 'modal_beta',\n      value: function modal_beta(lnk, confIn) {\n        // NOTE: not in use now\n        var conf = confIn;\n        conf.title = '<center>Give Us Feedback!</center>';\n\n        // Set a cookie *NOW* w/ JS -- so we can absolutely assure that if user hits\n        // the exit form *WITHOUT* cookies, that they must be disabling cookies on archive.org\n        // (but interestingly have JS enabled (since they are here! ;-))\n        // So exit form can give them \"you need to enable cookies\" fail...\n        $.cookie('beta-modal', 'open', { path: '/', expires: 1, domain: '.archive.org' });\n\n        var selector = $(lnk).attr('data-target');\n        conf.href = location.href;\n        conf.href = conf.href.replace(/&ui3=1$/, '');\n        conf.href = conf.href.replace(/\\/v2$/, '');\n\n        conf.body = '\\n  <style> #fback h4 { margin-top:30px; } </style>\\n  <div id=\"fback\" style=\"padding:20px\">\\n    <a target=\"_blank\" href=\"/details/v2tour20150420\">\\n      <div style=\"text-align:center; float:right\">\\n        <img src=\"/download/v2tour20150420/v2tour20150420.thumbs/April202015Tour_000375.jpg\"/><br/>\\n        TUTORIAL VIDEO\\n      </div>\\n    </a>\\n    <div style=\"font-size:18px\">\\n      Please take a moment to give us feedback below.\\n      We consider these comments as we make changes to the site.\\n    </div>\\n    <h5 style=\"display:none\">\\n      <br/><br/><br/>\\n      THANK YOU for your valuable feedback!\\n    </h5>\\n    <form id=\"modal_beta_form\" method=\"POST\" action=\"/services/exit.php\">\\n      <input type=\"hidden\" name=\"feedback_only\" value=\"1\"/><br/>\\n\\n      <h4>Feedback (details are helpful):</h4>\\n      <textarea class=\"form-control input-sm\" name=\"feedback\" rows=\"4\"></textarea>\\n\\n      <h4>May we contact you about your feedback?</h4>\\n      <input type=\"radio\" name=\"contact\" value=\"yes\"/> yes, here\\'s my email address:<br/>\\n      <input class=\"form-control input-sm\" type=\"text\" name=\"eml\"/> <br/>\\n      <input type=\"radio\" name=\"contact\" value=\"no\"/> no<br/>\\n      <hr style=\"border-color:black;background-color:black;color:black\" />\\n      You can use the classic version of archive.org for a limited period of time.<br/>\\n      <a target=\"_blank\" href=\"https://blog.archive.org/2014/11/05/redesign/\">\\n        Learn more\\n      </a>\\n      about why archive.org changed.<br/>';\n\n        if (conf.feedback_only) {\n          conf.body += '\\n          <input class=\"btn btn-primary\" type=\"submit\" style=\"margin-top:20px\" value=\"Submit\"/>';\n        } else {\n          conf.body += '\\n          <input class=\"btn btn-primary\" type=\"submit\" style=\"margin-top:20px\" value=\"Submit Feedback\"/>\\n          <input id=\"modal_beta_form_exit\" class=\"btn\" type=\"button\" style=\"margin-top:20px\" value=\"Exit to Classic Site\"/>';\n        }\n        conf.body += '\\n      <br/><br/>\\n      <i>What\\'s New?</i>\\n      [\\n        <a target=\"top\" href=\"https://blog.archive.org/2015/02/12/whats-new-with-v2/\">recent changes</a> |\\n        <a target=\"top\" href=\"/CHANGELOG.txt\">detailed CHANGELOG</a>\\n      ]\\n    </form>\\n  </div>';\n\n        AJS._modal_add(selector, conf);\n\n        // in case it's not obvious, there are FOUR CASES we (have to) handle:\n        //   feedback only, hit [submit] button\n        //   feedback only, cancel out (no feedback given)\n        //   exit beta, hit [submit] button\n        //   exit beta, no feedback given\n        $('#modal_beta_form_exit').on('click', function () {\n          $('#modal_beta_form input[name=feedback_only]').val(0);\n          conf.feedback_only = false;\n          conf.exiting = true;\n          $('#modal_beta_form').submit();\n        });\n\n        $('#modal_beta_form').on('submit', function () {\n          log('submit clicked!');\n\n          conf.submitted = true;\n          conf.postdata = $('#modal_beta_form').serialize(); // oh, fkya!\n\n          // we're polite\n          $(selector.concat(' h5')).fadeIn('slow');\n          $(selector.concat(' form')).fadeOut('slow');\n\n          setTimeout(function () {\n            // AJAX form post, keeping page where it is\n            $.post('/services/exit.php', conf.postdata, function () {\n              log('POSTED ', conf.postdata);\n\n              if ((!conf.feedback_only || conf.exiting) && document.cookie === '') {\n                // user disables cookies, so go directly to exit form where we'll\n                // give them more information about that and how we can't \"stick\"\n                // their preference to exit beta...\n                log('EXITING BUT HAS NO COOKIES!');\n                location.href = '/services/exit.php';\n                return;\n              }\n\n              $('body').removeClass('blurry');\n              $(selector).modal('hide');\n            });\n          }, 2500);\n\n          return false; // dont do *normal* submit of the form (and drive the page away)\n        });\n\n        $(selector).modal('show').on('hidden.bs.modal', function () {\n          log('beta modal hidden');\n\n          $('body').removeClass('blurry');\n          if (conf.feedback_only || !conf.exiting) {\n            $(selector).remove();\n            return;\n          }\n\n          var exitFN = function exitFN() {\n            if (!conf.submitted) {\n              // user clicked out of modal or [x] close button -- no form submit\n              // but they DO want to exit beta...\n              location.href = '/services/exit.php';\n            } else {\n              $(selector).remove();\n              log('going to ', conf.href);\n              location.href = conf.href;\n            }\n          };\n\n          if (typeof archive_analytics !== 'undefined') {\n            archive_analytics.send_ping({\n              kind: 'event',\n              ec: 'in_beta',\n              ea: 'exit',\n              cache_bust: Math.random()\n            }, exitFN); // once analytics GIF is loaded, invoke our callback!\n          } else {\n            log('uho analytics not defined!');\n            // should never happen, but just to be safe!!\n            exitFN();\n          }\n        });\n        return false;\n      }\n\n      /**\n       * Parse API data and check if the item is successfully marked to favorite or not\n       *\n       * @param {String} bookmarkRes response data from /bookmarks.php?add_bookmark=1&...\n       * @return {Boolean}\n       */\n\n    }, {\n      key: 'isFavoriteSuccessful',\n      value: function isFavoriteSuccessful(bookmarkRes) {\n        return bookmarkRes.indexOf('<meta name=\"ia-favorite-success\" content=\"1\">') !== -1;\n      }\n\n      // gives us ability to have JS intercept an href click and instead do a bootstrap modal.\n      // eg: when someone Favorites a list or item - a kind of confirmation box.\n      //     In that case, we want it to just say Favorited with a big black star in the middle.\n      //     We don't take user to the href target.\n      //     The modal disappears if the user clicks anywhere and returns to page they were on.\n      //     Timeout of a few seconds to close modal if they do nothing.\n      // config is a hashmap with optional keys:\n      //   auto_close, auto_remove, body, center, favorite, ignore_lnk, titlen,\n      //   headerClass, shown, follow_link_on_dismiss\n\n    }, {\n      key: 'modal_go',\n      value: function modal_go(lnk, confIn) {\n        var conf = confIn; // sigh\n\n        if (conf.favorite) {\n          // this flicks on a bunch of config options\n          conf.center = true;\n          conf.auto_close = true;\n          conf.title = 'Favorited';\n          conf.body = '<center><span style=\"font-size:100px;\" class=\"iconochive-favorite\"></span></center>';\n          conf.login = true; // must be logged in!\n        }\n\n        var selector = $(lnk).attr('data-target');\n        var href = $(lnk).attr('href');\n\n        AJS._modal_add(selector, conf);\n\n        if (conf.shown) {\n          $(selector).on('shown.bs.modal', function () {\n            conf.shown();\n          });\n        }\n\n        if (conf.follow_link_on_dismiss) {\n          $(selector).on('hidden.bs.modal', function () {\n            log('modal hidden, going to ', href, '..');\n            $('body').removeClass('blurry');\n            location.href = href;\n          });\n        }\n\n        $(selector).modal('show');\n\n        if (conf.login && $.cookie('logged-in-user') === null) {\n          if (location.protocol !== 'https:') {\n            // make absolutely sure we never login with http!\n            location.href = 'https://archive.org/account/login.php';\n            return false;\n          }\n          var url = '/account/login.php';\n          $.get(url, function (htmIn) {\n            $(selector.concat(' .modal-title')).text('Nearly there!  Please login first');\n\n            $(selector).modal('show');\n            // this allows us to effectively rip off the header/nav and footer\n            // if we are accessing a full page (eg: account login page)\n            var htm = $(htmIn).find('.container-ia > div').length ? $(htmIn).find('.container-ia > div').get(0) : htmIn;\n\n            $(selector.concat('-body')).html(htm);\n\n            var $form = $(selector.concat('-body form:has(input[type=submit])'));\n\n            if ($form.length) {\n              $form.on('submit', function (evt) {\n                evt.preventDefault();\n                evt.stopPropagation();\n\n                var keyvals = {};\n                $form.find('input').each(function (k, v) {\n                  if ($(v).attr('name').length) keyvals[$(v).attr('name')] = $(v).val();\n                });\n                // log('POST', url)\n                // log(keyvals)\n                $.post(url, keyvals, function () {\n                  log('SUBMITTED');\n                  if ($.cookie('logged-in-user') !== null) {\n                    // SUCCESS!\n                    // We are going to hide the login modal now, and need\n                    // to proceed only *after* the modal animation is done\n                    // and modal is gone.  So setup listener now, *then* hide.\n                    // Once login modal is gone, remove the modal, and\n                    // invoke the originally intended modal in fresh environment!\n                    $(selector).on('hidden.bs.modal', function () {\n                      $(selector).remove();\n                      log('SUCCESS');\n                      AJS.modal_go(lnk, conf); // invoke original modal!\n                    });\n                    $('body').removeClass('blurry');\n                    $(selector).modal('hide');\n                  } else {\n                    // eslint-disable-next-line  no-alert\n                    alert('Please try logging in again');\n                  }\n                });\n\n                return false;\n              });\n            }\n          });\n          return false;\n        }\n\n        if (conf.auto_remove) {\n          conf.auto_close = true;\n          $(selector).on('hidden.bs.modal', function () {\n            $(selector).remove();\n            $('body').removeClass('blurry');\n          });\n        }\n\n        if (!conf.ignore_lnk) {\n          var _url = lnk.href;\n          // log('submit', url)\n          $.get(_url, function (res) {\n            if (conf.favorite) {\n              if (typeof archive_analytics !== 'undefined') {\n                archive_analytics.send_ping({\n                  kind: 'event',\n                  ec: 'page_action',\n                  ea: 'favorite',\n                  el: location.pathname,\n                  cache_bust: Math.random()\n                });\n              }\n\n              if (AJS.isFavoriteSuccessful(res)) {\n                $('#favorite-button').addClass('favorited');\n              } else {\n                var $favModal = $(selector);\n                var failMessage = '\\n                <center>\\n                  <p class=\"favorite-failure-message\">\\n                    There was an error adding the favorite. If the problem persists, please contact support.\\n                  </p>\\n                </center>\\n              ';\n\n                $favModal.find('.modal-title').html('Failed');\n                $favModal.find('#confirm-modal-body').html(failMessage);\n              }\n            }\n\n            $(selector).modal('show');\n            if (conf.auto_close) setTimeout(function () {\n              return $(selector).modal('hide');\n            }, 2000);\n          });\n        } else {\n          $(selector).modal('show');\n        }\n\n        if (conf.center) $(selector.concat(' .modal-dialog')).center(); // vertically center\n\n        if (conf.auto_close && conf.ignore_lnk) setTimeout(function () {\n          return $(selector).modal('hide');\n        }, 2000);\n\n        return false;\n      }\n\n      // handy little method to ensure only 1 checkbox is checked\n\n    }, {\n      key: 'check1',\n      value: function check1(obj, selector) {\n        if (!obj.checked) return;\n\n        // toggle others to unchecked\n        var $selector = selector ? $(selector) : $(obj).parents('form');\n\n        // uncheck all; the re-check the checked one\n        $selector.find('input[type=checkbox]').attr('checked', false);\n\n        // eslint-disable-next-line  no-param-reassign\n        obj.checked = true;\n      }\n    }, {\n      key: 'addCommas',\n      value: function addCommas(nStr) {\n        // http://www.mredkj.com/javascript/numberFormat.html\n        var x = ('' + nStr).split('.');\n        var x1 = x[0];\n        var x2 = x.length > 1 ? '.'.concat(x[1]) : '';\n        var rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n          x1 = x1.replace(rgx, '$1,$2');\n        }return x1 + x2;\n      }\n    }, {\n      key: 'suffixFmt',\n      value: function suffixFmt(val, axis) {\n        if (axis.min >= 0.0 && axis.max <= 5)\n          // give a little bit more granularity of 1 decimal point...\n          return Math.round(val * 10, 1) / 10;\n\n        if (val >= 1000000) return (val / 1000000).toFixed(0).concat(' M');\n        if (val >= 1000) return (val / 1000).toFixed(0).concat(' K');\n        return val.toFixed(0);\n      }\n    }, {\n      key: 'suffixFmtPercent',\n      value: function suffixFmtPercent(val, axis) {\n        return AJS.suffixFmt(val, axis).concat('%');\n      }\n    }, {\n      key: 'descript',\n      value: function descript() {\n        var d = $('#descript').get(0);\n        if (d && d.offsetHeight < d.scrollHeight) {\n          // we overflowed the short descript at the top of the collection page.\n          // so show the little MORE button..\n          $('#descript-more').show();\n          // $('#descript').css({'border-bottom':'1px solid #ccc'})\n        }\n      }\n\n      // this allows easy setup for resize/orientation triggers for all graphs\n      // on a page that use this!\n\n    }, {\n      key: 'plotter',\n      value: function plotter(callback) {\n        if (typeof AJS.plotters === 'undefined') AJS.plotters = [];\n\n        if (callback) {\n          // stash a copy of the callback for resize/orientationchange triggers\n          AJS.plotters.push(callback);\n\n          // now do the actual plotting (eg: page load)\n          callback();\n        } else {\n          // step through each graph and rerun them\n          log('plotter() resize/orient change', AJS.plotters.length, 'graphs to resize');\n          for (var i = 0; i < AJS.plotters.length; i++) {\n            AJS.plotters[i]();\n          }\n        }\n      }\n\n      // Graphing for archive.org/services/views.php and TV\n\n    }, {\n      key: 'plot',\n      value: function plot(id, cfgIn, fmt_fn, pts, many) {\n        var cfg = cfgIn;\n        if (!cfg.xaxis) cfg.xaxis = { mode: 'time', color: cfg.dark ? '#ccc' : '#545454' };\n        if (!cfg.yaxis) cfg.yaxis = { color: cfg.dark ? '#ccc' : '#545454' };\n\n        var barWidth = void 0;\n        if (many && cfg.barWidth) barWidth = cfg.barWidth * 1; // *1 to pass lint; keeps like below; avoid obj destructuring\n        else if (cfg.barWidth) barWidth = cfg.barWidth * 86400 * 1000;else barWidth = (cfg.dayBarsNoPoints ? 1 : 7) * 86400 * 1000; // 1day|1week\n\n        cfg.series = {\n          bars: {\n            show: true,\n            barWidth: barWidth,\n            fill: 0.6,\n            color: '#385C74'\n          },\n          color: '#385C74',\n          points: { show: !cfg.dayBarsNoPoints }\n        };\n\n        if (typeof cfg.grid === 'undefined') {\n          cfg.grid = {\n            borderColor: cfg.dark ? '#333' : '#aaa',\n            hoverable: true\n          };\n        }\n        // log(cfg.series.bars)\n\n\n        if (cfg.dark) cfg.grid.backgroundColor = '#002b36';\n\n        if (!cfg.tip) cfg.tip = {};\n        if (!cfg.tip.id) cfg.tip.id = id;\n\n        if (typeof window.GraphPriorIndex === 'undefined') window.GraphPriorIndex = {};\n\n        // eslint-disable-next-line  no-nested-ternary\n        var ary = many ? pts : typeof pts.data === 'undefined' ? [{ data: pts }] : [pts];\n        if (cfg.dayBarsNoPoints && !cfg.noLabel) ary[0].label = id;\n\n        var selid = '#' + id;\n        $.plot($(selid), ary, cfg);\n\n        if (!fmt_fn) return;\n\n        $(selid).bind('plothover', function (event, pos, item) {\n          if (!item) {\n            window.GraphPriorIndex[id] = -666;\n            $('#gtip').remove();\n            return;\n          }\n          if (window.GraphPriorIndex[id] !== item.dataIndex) {\n            window.GraphPriorIndex[id] = item.dataIndex;\n            $('#gtip').remove();\n\n            var str = fmt_fn(item.datapoint[0], item.datapoint[1]);\n            var $graf = $(selid);\n            var off = $graf.offset();\n\n            // figure out which way from the \"dot\"/bar in the graph the\n            // tooltip should go -- left or right!\n            var pegTo = cfg.tip.pegTo;\n\n            if (!pegTo) pegTo = pos.pageX - off.left > $graf.width() / 2 ? 'right' : 'left';\n\n            var pegToVal = pegTo === 'right' ? $graf.width() - (pos.pageX - off.left - 20) : pos.pageX - off.left + 20;\n            log(pegTo, pegToVal);\n\n            $('#' + cfg.tip.id).append('\\n<div id=\"gtip\" class=\"roundbox2\"\\n  style=\"top:' + (pos.pageY - off.top) + 'px; ' + pegTo + ':' + pegToVal + 'px\">' + str + '</div>');\n          }\n        });\n      }\n\n      // Use a color sampling 3rd party piece of code, to find the 1st/primary image in the \"welcome\"\n      // area, and find the \"dominant color\".  (internally, uses canvas to color sample).\n      // Adjust text/foreground color as well as any \"selected tab\" background color.\n      // NOT USED ANYMORE -- GONE SERVERSIDE!\n\n    }, {\n      key: 'welcome_recolor',\n      value: function welcome_recolor(e) {\n        if (typeof ColorThief === 'undefined' || !e.length) return;\n\n        if (AJS.welcome_recolored) return;\n        AJS.welcome_recolored = true;\n\n        var img = $(e)[0];\n        log('welcome_recolor', img.src);\n\n        /* global ColorThief */\n        var ct = new ColorThief();\n        var palette = ct.getPalette(img, 5);\n        log(palette);\n        if (!palette) return;\n        var dominantColorRGB = palette[0]; // 3 element array!\n\n        if (!dominantColorRGB) return;\n        log(dominantColorRGB);\n\n        // if dominant color is uh, kinda in the lighter range -- txt should be black\n        var avgVal = Math.round($(dominantColorRGB).map(function (k, v) {\n          return v;\n        }).toArray().reduce(function (a, b) {\n          return a + b;\n        }) / dominantColorRGB.length);\n        var color = avgVal >= 128 ? 'black' : 'white';\n        log('avgVal', avgVal);\n\n        $('.welcome').css({\n          color: color,\n          'background-color': 'rgb(' + dominantColorRGB.join(',') + ')'\n        });\n        $('.welcome .stealth:not(.tabby .stealth)').css({ color: color });\n      }\n\n      /**\n       * Use the following function to make an image, div, etc focusable, and 'click'-able.\n       * Function adds a tabindex for 'focus' and listens for a keydown/keypress of enter or space,\n       * then triggers a click.\n       *\n       * var element: String used for jquery capture of non-acessible & mouse-only element.\n       *    ex: \"#AmazonPayButton img\"\n       * Triggers 'click' on element.\n       */\n\n    }, {\n      key: 'makeMouseElementAccessible',\n      value: function makeMouseElementAccessible(element) {\n        $(element).attr('tabindex', '0').on('keypress keydown', function makeMouseElementAccessibleGo(e) {\n          if (e.type !== 'click') {\n            var code = e.keyCode || e.which;\n            var k_space = 32; // space bar pressed\n            var k_enter = 13; // enter key pressed\n            if ([k_space, k_enter].indexOf(code) !== -1) $(this).click();\n          }\n        });\n      }\n\n      // use something like ',' for the optional 3rd arg if you want to allow\n      // for appending 2+ values into a field, etc...\n\n    }, {\n      key: 'autocomplete',\n      value: function autocomplete(selector, options, multiValSplitChar) {\n        $(selector).autocomplete({\n          appendTo: '#autocompletee',\n          minLength: 0,\n          source: function source(request, response) {\n            // delegate back to autocomplete, but extract the last term\n            response($.ui.autocomplete.filter(options, request.term.split(/,\\s*/).pop()));\n          },\n          focus: function focus() {\n            return false;\n          }, // prevent value inserted on focus\n          select: function autocomplete_select(event, ui) {\n            if (multiValSplitChar) {\n              var terms = this.value.split(/,\\s*/);\n              // remove the current input\n              terms.pop();\n              // add the selected item\n              terms.push(ui.item.value);\n              // add placeholder to get the comma-and-space at the end\n              terms.push('');\n              this.value = terms.join(', ');\n            } else {\n              this.value = ui.item.value;\n            }\n            return false;\n          }\n        });\n      }\n    }, {\n      key: 'addNotes',\n      value: function addNotes(kind, htm) {\n        // flag lists have multiple users so the \"rights\" there\n        // is a bit to thorny right now so for simplicity and\n        // the main feature to go live, skipping them...\n        if (kind !== 'favorite' && kind !== 'list') return htm;\n\n        if (!htm && $('body').hasClass('editable')) AJS.addingNotesKind = kind;\n        if (!AJS.addingNotesKind) return htm;\n\n        AJS.addNoteHTM = $('\\n  <div class=\"note\">\\n    <span class=\"edit\">\\n      <a href=\"#\" onclick=\"return AJS.editNote(this)\">Add a Note</a>\\n    </span>\\n  </div>');\n\n        log('addNotes');\n\n        // Next, we are going to do a global DOM search and insert (where needed)\n        // for basically the first page load.  But we're also called in \"infinite scroll\"\n        // page 2+ mode, and in that case, we want to modify (JUST) the HTM when that's\n        // for page 2+ and about to be inserted into the DOM, *instead* of another global\n        // DOM search.\n        if (htm) {\n          // (Basically we are now doing page 2+ in infinite scroll)\n          // OK this is sorta wild/maybe not obvi...a\n          // (Kinda like a jQuery replace_regexp()...)\n          // Take the *string* of HTM we are passed, convert it to a \"findable\" jQuery object\n          // then insertd \"addNoteHTM\" where needed.\n          // Finally, convert back to string and return this modified version to caller.\n          var $htm = $('<div>' + htm + '</div>');\n          $htm.find('.details-ia .C234:not(:has(\".note\"))').append(AJS.addNoteHTM);\n          return $htm.html();\n        }\n\n        // this is initial page load\n        // NOTE: return value irrelevant here\n        return $('.details-ia .C234:not(:has(\".note\"))').append(AJS.addNoteHTM);\n      }\n    }, {\n      key: 'editNote',\n      value: function editNote(e) {\n        var $e = $(e);\n        var identifier = $e.parents('.details-ia').prev().attr('data-id');\n        if (!identifier) return false;\n\n        var $note = $e.parents('.note');\n\n        var val = '';\n        if ($e.text() === 'edit') {\n          val = $note.find('span:first').text();\n          val = val.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        $note.hide();\n        $note.parent().append($('\\n  <form class=\"form form-horizontal note\" role=\"form\" onsubmit=\"AJS.editedNote(this);return false\">\\n    <div class=\"form-group\">\\n      <div class=\"col-xs-2 col-md-1 col-lg-1\">\\n        <b>Note:</b>\\n      </div>\\n      <div class=\"col-xs-10 col-md-6 col-lg-7\">\\n        <textarea class=\"form-control\" name=\"comments\">' + val + '</textarea>\\n        <div class=\"clearfix visible-xs-block\"></div>\\n      </div>\\n      <div class=\"clearfix visible-xs-block\"></div>\\n      <div class=\"col-xs-12 col-md-5 col-lg-4 btns\">\\n        <button type=\"button\" onclick=\"AJS.editedNote(this)\" class=\"btn btn-success btn-xs\">Save</button>\\n        <button type=\"button\" onclick=\"AJS.editedNote(this)\" class=\"btn btn-info btn-cancel btn-xs\">Cancel</button>\\n        <button type=\"button\" onclick=\"AJS.editedNote(this)\" class=\"btn btn-danger btn-xs ' + (val ? '' : 'hidden') + '\">Remove</button>\\n      </div>\\n    </div>\\n  </form>'));\n\n        return false;\n      }\n    }, {\n      key: 'editedNote',\n      value: function editedNote(e) {\n        var $e = $(e);\n\n        var identifier = $e.parents('.details-ia').prev().attr('data-id');\n        if (!identifier) return;\n\n        // if user hit [return] and submitted form, etc.\n        // treat it like they hit the [Save] button\n        if ($e.is('form')) $e = $e.find('button:contains(\"Save\")');\n\n        var action = $e.text();\n        var $parent = $e.parents('.note');\n        var $origNote = $parent.prev();\n\n        if (action === 'Save' || action === 'Remove') {\n          var val = action === 'Save' ? $parent.find('textarea').val() : '';\n          var url = '/bookmarks.php?identifier='.concat(identifier, '&kind=', AJS.addingNotesKind, '&add_comment=', encodeURIComponent(val));\n          log('get ', url);\n          $.get(url, function () {\n            var htm = val ? 'Note: \"<span>' + val.replace(/</g, '&lt;').replace(/>/g, '&gt;') + '</span>\"\\n            <span class=\"edit\">(<a href=\"#\" onclick=\"return AJS.editNote(this)\">edit</a>)</span>' : AJS.addNoteHTM.html();\n            // show the \"Note: ...\" section again (with now appropriately updated innards)\n            $origNote.html(htm).show();\n            $parent.remove(); // lose the form\n          });\n          return;\n        }\n        // else Cancel does nothing but below...\n\n        $origNote.show(); // show the \"Note: ...\" section again\n        $parent.remove(); // lose the form\n      }\n    }, {\n      key: 'thumbzilla',\n      value: function thumbzilla(id) {\n        /* global  TV2  TV3 */\n        // cover entire screen with new div...\n        var TV = $('body').hasClass('tv');\n        if (TV) TV2.unplay('thumbzilla');\n\n        // get list of thumbs\n        var htm = '';\n        $(AJS.thumbzillas).each(function (key, val) {\n          var start = parseInt(val, 10);\n          if (TV) {\n            var startend = '/start/' + start + '/end/' + (start + TV3.CLIP_SEC_MAX2);\n            htm += '<a onclick=\"$(\\'#opscreen1M\\').fadeOut(\\'slow\\'); TV2.seekURL(\\'' + startend + '\\')\" href=\"' + startend + '\">';\n          } else {\n            var locNEW = '/details/' + id + '&start=' + start;\n            htm += '<a onclick=\"$(\\'#opscreen1M\\').fadeOut(\\'slow\\'); return Play.seek(this)\" href=\"' + locNEW + '\">';\n          }\n          htm += '<img src=\"/download/' + id + '/' + id + '.thumbs/' + id + '_' + val + '.jpg\"/></a>';\n        });\n\n        if (htm === '') {\n          // eslint-disable-next-line  no-alert\n          alert('coming soon!');\n          return false;\n        }\n\n        $('#opscreen1M').remove();\n        $('body').prepend($('<div />').attr({ id: 'opscreen1M' }));\n\n        var $imgs = $('<div/>').attr({ id: 'thumbzilla' }).html('<div>' + htm + '</div>');\n        $imgs.appendTo('#opscreen1M');\n        $('#opscreen1M').css('visibility', 'hidden').show();\n        var winH = $(window).height() + (AJS.ios ? 60 : 0); // plus iOS bleah\n        for (var w = 160; w >= 10; w -= 10) {\n          var h = Math.round(w * (110 / 160.0));\n          log('TRYING', w, 'x', h);\n          $('#thumbzilla img').css({ width: w, height: h });\n          if ($('#thumbzilla img:last').offset().top + h <= winH) break;\n        }\n\n        $('#thumbzilla div').center();\n        $('#opscreen1M').hide().css('visibility', 'visible').fadeIn('slow').one('click.opscreen1M.nixer', function () {\n          return $('#opscreen1M').fadeOut('slow');\n        });\n        return false;\n      }\n\n      /* Wayback Machine form type-ahead setup: it presents a list of sites\n         matching the text as user types. */\n\n    }, {\n      key: 'nav_tophat_wb_setup',\n      value: function nav_tophat_wb_setup() {\n        // Configuration\n        var WAYBACK = 'https://web.archive.org';\n        var HOSTS_ENDPOINT = WAYBACK + '/__wb/search/host?q=';\n        var ANCHORS_ENDPOINT = WAYBACK + '/__wb/search/anchor?q=';\n        var REDIRECT_URL = WAYBACK + '/web/*/';\n        var REDIRECT_SEARCH = WAYBACK + '/web/*/';\n\n        function search_or_calendar(query) {\n          if (query.indexOf('http://') === 0 || query.indexOf('https://') === 0 || query.match(/[\\w.]{2,256}\\.[a-z]{2,4}/gi)) document.location.href = REDIRECT_URL + query;else document.location.href = REDIRECT_SEARCH + encodeURIComponent(query);\n        }\n\n        var $input = $('#nav-wb-url');\n        var $form = $input.parent('form');\n        $form.submit(function (e) {\n          AJS.fireAnalyticsTrackingEvent('HomePageWayback', 'SearchForm');\n          var query = $input.val();\n          search_or_calendar(query);\n          e.preventDefault();\n          return false;\n        });\n        $input.on('focus input paste', function () {\n          if (typeof $input.typeahead === 'undefined') {\n            $.ajax({\n              url: '/includes/node_modules/bootstrap-3-typeahead/bootstrap3-typeahead.min.js',\n              dataType: 'script',\n              cache: true\n            }).done(function () {\n              $input.typeahead({\n                source: function source(query, process) {\n                  $input.focus(); // bugfix https://github.com/bassjobsen/Bootstrap-3-Typeahead/issues/150#issuecomment-197949899\n                  return $.get(HOSTS_ENDPOINT + encodeURIComponent(query), function (data) {\n                    if (typeof data.hosts !== 'undefined' && data.hosts.length > 0) {\n                      return process(data.hosts);\n                    } else if (typeof data.isUrl !== 'undefined' && data.isUrl === true && typeof data.excluded === 'undefined') {\n                      return process([{\n                        display_name: query\n                      }]);\n                    }\n\n                    return $.get(ANCHORS_ENDPOINT + encodeURIComponent(query), function (data2) {\n                      if (typeof data2 !== 'undefined' && data2.length > 0) return process(data2.slice(0, 5));\n                      return undefined;\n                    });\n                  });\n                },\n                matcher: function matcher() {\n                  return true;\n                },\n                displayText: function displayText(item) {\n                  return item.display_name;\n                },\n                autoSelect: false,\n                delay: 400,\n                fitToElement: false, /* not good with long URLs */\n                minLenght: 3,\n                items: 8\n              }).change(function () {\n                var current = $input.typeahead('getActive');\n                if (current && current.display_name === $input.val()) $form.submit();\n              }).on('keyup', function (e) {\n                if (e.which === 10 || e.which === 13) {\n                  AJS.fireAnalyticsTrackingEvent('HomePageWayback', 'SearchForm');\n                  var query = $input.val();\n                  search_or_calendar(query);\n                  e.preventDefault();\n                  return false;\n                }\n                return undefined;\n              });\n            });\n          }\n        });\n      }\n\n      /* eslint-disable */\n\n      /**\n       * Helper to open a popup with JS\n       * @param int width\n       * @param int height\n       * @param string href\n       */\n\n    }, {\n      key: 'openPopup',\n      value: function openPopup(width, height, href) {\n        var params = {\n          height: height,\n          width: width,\n          scrollbars: 'yes',\n          resizable: 'yes',\n          toolbar: 'no',\n          directories: 'no',\n          location: 'yes',\n          menubar: 'no',\n          status: 'yes'\n\n          // Options must be expressed as comma-separated key-value pairs.\n        };var options = Object.keys(params).filter(function (key) {\n          return params[key];\n        }).reduce(function (paramPairs, key) {\n          return paramPairs.concat(key + '=' + params[key]);\n        }, []).join(',');\n\n        window.open(href, 'popup', options);\n      }\n\n      /**\n       * React Component, a link that opens its href in a popup instead of the same window.\n       * Height and width of the popup can be customized via props.\n       */\n\n    }, {\n      key: 'PopupLink',\n      value: function PopupLink() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            children = _ref2.children,\n            href = _ref2.href,\n            height = _ref2.height,\n            width = _ref2.width,\n            title = _ref2.title;\n\n        function handleClick(event) {\n          event.preventDefault();\n          return AJS.openPopup(width, height, href);\n        }\n\n        // Include href for semantics.\n        return React.createElement(\n          'a',\n          { href: href, title: title, onClick: handleClick },\n          children\n        );\n      }\n\n      /**\n       * Render the CreativeCommonsLicenseLink React component to a DOM node with the\n       * appropriate ID.\n       */\n\n    }, {\n      key: 'setUpCreativeCommonsLicenseLink',\n      value: function setUpCreativeCommonsLicenseLink() {\n        var root = document.querySelector('#creative_commons_license_link_react');\n\n        if (!root) {\n          return;\n        }\n\n        ReactDOM.render(React.createElement(AJS.CreativeCommonsLicenseLink, {\n          href: root.dataset.href,\n          licenseName: root.dataset.licenseName,\n          licenseSelected: root.dataset.licenseSelected === 'true'\n        }), root);\n      }\n      /* eslint-enable */\n\n      /**\n       * Sets up listeners on search forms to handle opening/closing the search options.\n       *\n       * @see SearchOptions.inc\n       */\n\n    }, {\n      key: 'setUpSearchForms',\n      value: function setUpSearchForms() {\n        var body = $(document.body);\n        var searchForms = $('.js-search-form');\n\n        /**\n         * Sets up an individual form, isolating its event listeners from the other ones.\n         *\n         * @param {HTMLFormElement} formNode\n         */\n        function setUpSearchForm(formNode) {\n          var form = $(formNode);\n          var searchBar = form.find('.js-search-bar');\n          var searchOptions = form.find('.js-search-options');\n          var keepOpenWhenChanged = searchOptions.data('keepOpenWhenChanged');\n          var formChanged = false;\n\n          /**\n           * Catches web searches and redirects them to Wayback Machine. The search form must have a\n           * \"data-wayback-machine-search-url\" attribute set in order for this method to work (and the\n           * method assumes the query can be tacked onto the end of this URL). For all other kinds of\n           * searches, does nothing.\n           *\n           * @param {Event} event\n           */\n          function redirectWaybackSearches(event) {\n            var waybackMachineSearchUrl = this.dataset.waybackMachineSearchUrl;\n\n            var elements = $(this.elements);\n            var checkedInput = elements.filter('[name=\"sin\"]:checked');\n            var searchInput = elements.filter('[name=\"search\"]');\n            var sinValue = checkedInput.length ? checkedInput[0].value : '';\n            var searchValue = searchInput.length ? searchInput[0].value : '';\n\n            if (waybackMachineSearchUrl && sinValue === 'WEB') {\n              event.preventDefault();\n\n              window.location = [\n              // Remove trailing slash just in case.\n              waybackMachineSearchUrl.replace(/\\/$/, ''), searchValue].join('/');\n            }\n          }\n\n          function openOptions() {\n            searchOptions.addClass('is-open').attr('aria-expanded', true);\n          }\n\n          function closeOptions() {\n            searchOptions.removeClass('is-open').attr('aria-expanded', false);\n          }\n\n          /**\n           * Closes options if the newly focused element is outside of the form and the form\n           * is configured to close when it is no longer active.\n           *\n           * @param {HTMLElement} targetElement element being clicked or receiving focus\n           */\n          function handleFocusChange(targetElement) {\n            if (!targetElement || form[0].contains(targetElement) || keepOpenWhenChanged && formChanged) return;\n\n            closeOptions();\n          }\n\n          if (form.length) {\n            form.on('submit', redirectWaybackSearches);\n\n            if (!searchOptions.hasClass('is-open')) {\n              body.on('click', function (event) {\n                handleFocusChange(event.target);\n              });\n\n              form.on('change', function () {\n                formChanged = true;\n              }).on('focusout', function (event) {\n                handleFocusChange(event.relatedTarget);\n              });\n\n              searchBar.on('focusin', function () {\n                openOptions();\n              });\n            }\n          }\n        }\n\n        searchForms.each(function (index, node) {\n          return setUpSearchForm(node);\n        });\n      }\n\n      /**\n       * Sets up two-way communication between the main page and a BookReader\n       * embedded in an <iframe>\n       *\n       * Due to the <iframe> the page and the BookReader must communicate using\n       * the BookReader's URL plugin, which sends and listens for \"message\"\n       * events via window.postMessage().\n       */\n\n    }, {\n      key: 'setUpBookReaderIframe',\n      value: function setUpBookReaderIframe() {\n        var messageType = 'bookReaderFragmentChange';\n        var iframe = document.querySelector('#texty iframe');\n\n        // No BookReader embed, abort\n        if (!iframe) return;\n\n        // URL syncing not enabled, abort\n        if (!iframe.hasAttribute('data-book-reader-sync-urls')) return;\n\n        /**\n         * Updates the current page URL without reloading or adding to the\n         * browser history using the History API\n         *\n         * On browsers that don't support window.history (mainly Opera Mini),\n         * this is a no-op.\n         *\n         * @param {String} fragment the new fragment\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/History_API\n         */\n        function updateUrl(fragment) {\n          // History API not supported, abort\n          if (!('history' in window)) return;\n\n          var path = replaceBookReaderFragment(window.location.pathname, fragment);\n\n          // Reconstruct URL with new path\n          var url = path + window.location.search + window.location.hash;\n\n          window.history.replaceState({ fragment: fragment }, window.title, url);\n        }\n\n        window.addEventListener('message', function (event) {\n          // Not a recognized message type, abort\n          if (!event.data || event.data.type !== messageType) return;\n\n          updateUrl(event.data.fragment);\n        });\n      }\n\n      /**\n       * Expandable/collapsible accordion component, implemented with <details>\n       * elements\n       *\n       * The JavaScript guarantees only one <details> is open at a time and\n       * scrolls the open <details>'s content into view.\n       *\n       * @see accordion.less\n       */\n\n    }, {\n      key: 'setUpAccordions',\n      value: function setUpAccordions() {\n        /**\n         * Closes all <details> elements in detailsEls, except selectedDetails\n         *\n         * @param {HTMLDetailsElement[]} detailsEls\n         * @param {HTMLDetailsElement}   selectedDetails\n         */\n        function closeAllExcept(detailsEls, selectedDetails) {\n          Array.from(detailsEls).forEach(function (details) {\n            if (details !== selectedDetails) {\n              // eslint-disable-next-line no-param-reassign\n              details.open = false;\n            }\n          });\n        }\n\n        /**\n         * Sets up a single accordion component\n         *\n         * @param {HTMLElement} accordion\n         */\n        function setUpAccordion(accordion) {\n          /**\n           * Responds to the \"toggle\" event on a <details>\n           *\n           * @param {Event} event\n           */\n          function handleToggle(event) {\n            if (!event.target.open) return;\n\n            closeAllExcept(accordion.querySelectorAll('details'), event.target);\n\n            // See https://www.abeautifulsite.net/smoothly-scroll-to-an-element-without-a-jquery-plugin-2\n            $('html, body').animate({\n              scrollTop: $(event.target).offset().top\n            }, 400);\n          }\n\n          Array.from(accordion.querySelectorAll('details')).forEach(function (details) {\n            details.addEventListener('toggle', handleToggle);\n          });\n\n          accordion.setAttribute('data-accordion-ready', '');\n        }\n\n        Array.from(document.querySelectorAll('[data-accordion]')).forEach(setUpAccordion);\n      }\n\n      /**\n       * Handles click on search 'Advanced Search' link.\n       *\n       * If 'Search TV news captions' is checked, we ignore the link click\n       * and create and open TV advanced search popup right on the page.\n       *\n       * @return {boolean}  true for browser to go to normal advanced search page; else false\n       */\n\n    }, {\n      key: 'advanced_search',\n      value: function advanced_search(link) {\n        if (!AJS.is_advanced_TV_search(link)) return true;\n\n        // this means we want TV advanced search form behaviour instead!\n        if (!AJS.adv) {\n          AJS.adv = {\n            mapping: false\n          };\n        }\n\n        // only reload the resources below at most 1x/day\n        var ymd = new Date().toISOString().substr(0, 10); // eg: 2017-06-28\n        $.ajaxSetup({\n          cache: true\n        });\n\n        // NOTE: using new JS Promise / jQuery Promise-ish Deferred..\n        // NOTE: if we are invoking this more than once, we reuse prior results\n        // NOTE: ymd forces reload at least once a day\n        // NOTE: if any resources happen to _already_ be loaded in <head>, use them\n        var i = 'https://archive.org/includes/';\n        $.when(typeof TV !== 'undefined' || $.getScript(i.concat('tv.min.js?', ymd)), typeof TVSearch !== 'undefined' || $.getScript('/services/min.php?in=tvsearch.js&', ymd), $.ui || $.getScript(i.concat('jquery-ui-1.10.3.min.js')), $.ui || $.get('/includes/redmond/jquery-ui-1.10.3.min.css', function (css) {\n          $('<style />').html(css).appendTo('head'); // Add CSS to page\n        }), AJS.adv.mapping || $.getJSON('/details/tv?mappings&output=json&'.concat(ymd), function (mapping) {\n          AJS.adv.mapping = mapping;\n        })).then(function () {\n          if (AJS.adv.mapping.length !== 2) {\n            // eslint-disable-next-line  no-alert\n            alert('failed to get network and program mappings!');\n            return;\n          }\n\n          /* global  TVSearch */\n          TVSearch.proPick(AJS.adv.mapping, link);\n        });\n\n        return false;\n      }\n\n      /**\n       * Returns whether or not 'Advanced Search' should be handled via JS\n       * (which as of now is just TV FTS to make a popup show up).\n       * Logically private.\n       *\n       * @param  {DOM element}  elm 'Advanced Search' link element that was just clicked\n       * @return {Boolean}      should handle with JS and not directly go to /advanced_search.php?\n       */\n\n    }, {\n      key: 'is_advanced_TV_search',\n      value: function is_advanced_TV_search(elm) {\n        if (location.hostname === 'web.archive.org') return false;\n\n        // for now at least, tracey felt should avoid handling link on IA top/home page even when\n        // TV FTS is picked.  for consistency, this is _definitely_ worth revisiting.\n        if ($(document.body).hasClass('top')) return false;\n\n        var $form = $(elm).parents('form');\n        if ($form.find('.js-search-options input[value=TV]').is(':checked')) return $form;\n\n        return false;\n      }\n\n      /**\n       * Fires an Archive Analytics tracking event.\n       * @param {string} category\n       * @param {string} action\n       * @param {string} label\n       */\n\n    }, {\n      key: 'fireAnalyticsTrackingEvent',\n      value: function fireAnalyticsTrackingEvent(category, action) {\n        var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : location.pathname;\n\n        if (typeof archive_analytics !== 'undefined') {\n          archive_analytics.send_ping({\n            kind: 'event',\n            ec: category,\n            ea: action,\n            el: label,\n            cache_bust: Math.random()\n          });\n        }\n      }\n\n      /**\n       * Attaches handlers for action tracking.\n       *\n       * To enable click tracking for a link, add a `data-event-click-tracking`\n       * attribute containing the Google Analytics Event Category and Action, separated\n       * by a vertical pipe (|).\n       * e.g. `<a href=\"foobar\" data-event-click-tracking=\"TopNav|FooBar\">`\n       *\n       * To enable form submit tracking, add a `data-event-form-tracking` attribute\n       * to the `form` tag.\n       * e.g. `<form data-event-form-tracking=\"TopNav|SearchForm\" method=\"GET\">`\n       */\n\n    }, {\n      key: 'setUpActionTracking',\n      value: function setUpActionTracking() {\n        var clickTrackingAttributeName = 'event-click-tracking';\n        var formTrackingAttributeName = 'event-form-tracking';\n\n        function actionHandler(attributeName) {\n          return function (event) {\n            var currentTarget = $(event.currentTarget);\n            if (!currentTarget) return;\n            var categoryAction = currentTarget.data(attributeName);\n            if (!categoryAction) return;\n            var categoryActionParts = categoryAction.split('|');\n            AJS.fireAnalyticsTrackingEvent(categoryActionParts[0], categoryActionParts[1]);\n          };\n        }\n\n        $(document.body).on('click', '[data-' + clickTrackingAttributeName + ']', actionHandler(clickTrackingAttributeName));\n        $('form[data-' + formTrackingAttributeName + ']').on('submit', actionHandler(formTrackingAttributeName));\n      }\n\n      /**\n       * Sets up data-popup-links\n       */\n\n    }, {\n      key: 'setupPopupLink',\n      value: function setupPopupLink() {\n        var attributeName = 'popup-link';\n        var widthAttribute = 'popup-link-width';\n        var heightAttribute = 'popup-link-height';\n\n        $(document.body).on('click', '[data-' + attributeName + ']', function (event) {\n          event.preventDefault();\n          var currentTarget = $(event.currentTarget);\n          var w = currentTarget.data(widthAttribute) || 500;\n          var h = currentTarget.data(heightAttribute) || 500;\n          AJS.openPopup(w, h, event.currentTarget.href);\n        });\n      }\n\n      /**\n       * React functional component. Renders a table showing view stats per geographic region for an\n       * item or collection.\n       *\n       * @see stats-table.less\n       *\n       * @param {Object} props\n       * @param {String} props.caption\n       * @param {GeoCount[]} props.counts\n       * @return {String}\n       */\n\n    }, {\n      key: 'RegionsTable',\n      value: function RegionsTable(_ref3) {\n        var _ref3$caption = _ref3.caption,\n            caption = _ref3$caption === undefined ? 'Regions' : _ref3$caption,\n            _ref3$captionClass = _ref3.captionClass,\n            captionClass = _ref3$captionClass === undefined ? '' : _ref3$captionClass,\n            _ref3$counts = _ref3.counts,\n            counts = _ref3$counts === undefined ? [] : _ref3$counts;\n\n        return React.createElement(\n          'table',\n          { className: 'stats-table' },\n          React.createElement(\n            'caption',\n            { className: captionClass },\n            caption\n          ),\n          React.createElement(\n            'thead',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'th',\n                { scope: 'col' },\n                'Region'\n              ),\n              React.createElement(\n                'th',\n                { scope: 'col' },\n                'Country'\n              ),\n              React.createElement(\n                'th',\n                { className: 'stats-table__numeric-column', scope: 'col' },\n                'Views'\n              )\n            )\n          ),\n          React.createElement(\n            'tbody',\n            null,\n            counts.map(function (count) {\n              return React.createElement(\n                'tr',\n                { key: count.state.code + '_' + count.country.code + '_' + count.count },\n                React.createElement(\n                  'td',\n                  null,\n                  count.state.formattedName\n                ),\n                React.createElement(\n                  'td',\n                  null,\n                  count.country.formattedName\n                ),\n                React.createElement(\n                  'td',\n                  { className: 'stats-table__numeric-column' },\n                  count.formattedCount\n                )\n              );\n            })\n          )\n        );\n      }\n\n      /**\n       * React functional component. Renders a message to display while a resource is loading.\n       *\n       * @see loading-message.less\n       *\n       * @param {Object} props\n       * @param {String} props.message\n       * @return {String}\n       */\n\n    }, {\n      key: 'LoadingMessage',\n      value: function LoadingMessage(_ref4) {\n        var _ref4$message = _ref4.message,\n            message = _ref4$message === undefined ? 'Loading' : _ref4$message;\n\n        return React.createElement(\n          'small',\n          { className: 'loading-message' },\n          message\n        );\n      }\n\n      /**\n       * Finds an element with class \"js-top-regions-table\" and renders a table showing the top 10\n       * regions in terms of views for an item/collection.\n       *\n       * Data Attributes:\n       *  - data-caption (string)\n       *  - data-caption-class (string)\n       *  - data-days (number)\n       *  - data-identifier (string)\n       *  - data-limit (number)\n       */\n\n    }, {\n      key: 'setUpTopRegionsTable',\n      value: function setUpTopRegionsTable() {\n        var root = $('.js-top-regions-table');\n        var message = root.find('.js-top-regions-message');\n        var originalMessageText = message.text();\n\n        if (!root || !message) return;\n\n        ReactDOM.render(React.createElement(AJS.LoadingMessage, { message: 'loading data' }), message[0]);\n\n        var apiOptions = {\n          uaKinds: ['non_robot', 'unrecognized']\n        };\n\n        if (root.data('days')) apiOptions.days = parseInt(root.data('days'), 10);\n\n        if (root.data('limit')) apiOptions.limit = parseInt(root.data('limit'), 10);\n\n        AJS.StatsApiClient.getGeoCounts(root.data('identifier'), apiOptions).then(function (counts) {\n          ReactDOM.render(React.createElement(AJS.RegionsTable, {\n            caption: root.data('caption'),\n            captionClass: root.data('captionClass'),\n            counts: counts\n          }), root[0]);\n        }, function () {\n          // If API call fails, fall back to original text.\n          message.text(originalMessageText);\n        });\n      }\n    }]);\n\n    return AJS;\n  }(); // end class AJS\n\n\n  AJS.TILE_WIDTH = 180;\n  AJS.TILE_WIDTH_SMALL = 150;\n  AJS.ios = navigator.userAgent.indexOf('iPhone') > 0 || navigator.userAgent.indexOf('iPad') > 0 || navigator.userAgent.indexOf('iPod') > 0;\n  AJS.page_map = {};\n  AJS.cgi_args = {};\n\n  var Timegraf = function () {\n    function Timegraf() {\n      _classCallCheck(this, Timegraf);\n    }\n\n    _createClass(Timegraf, null, [{\n      key: 'setup',\n      // config that comes from PHP\n\n      // class for facets section interactive time-related graph.\n      // Graph shows search results histogramed over time.\n      // It allows user to drag left and right 'handles' overlaying the graph to constrain to a\n      // smaller time period.\n      value: function setup(leftTS, riteTS, minDate, maxDate) {\n        Timegraf.c.realGraphWidth = Timegraf.c.GRAPH_WIDTH - Timegraf.c.GRAPH_PADDING;\n        Timegraf.c.maxSlide = Math.floor((maxDate.getTime() - minDate.getTime()) / 86400000);\n        var csMinTS = minDate.getTime() / 1000;\n        var left = leftTS > 0 ? Math.floor((leftTS - csMinTS) / 86400) : 0;\n        var rite = riteTS > 0 ? Math.floor((riteTS - csMinTS) / 86400) : Timegraf.c.maxSlide;\n\n        var $sliderdiv = $('<div />').attr({ id: 'slider' }).css({\n          width: Timegraf.c.realGraphWidth,\n          position: 'absolute',\n          top: Timegraf.c.GRAPH_HEIGHT - 10,\n          left: 0,\n          zIndex: 1\n        });\n        $('#timegraf').append($sliderdiv);\n        $sliderdiv.append('<br />'); // bleah!\n\n\n        log(left, rite);\n\n        $('#slider').slider({\n          range: true,\n          max: Timegraf.c.maxSlide,\n          values: [left, rite],\n          slide: function slide(event, ui) {\n            var ts = minDate.getTime();\n            var d1 = new Date(ts);\n            var d2 = new Date(ts);\n\n            d1.setDate(d1.getDate() + ui.values[0]);\n            d2.setDate(d2.getDate() + ui.values[1]);\n\n            $('#from ').html($.datepicker.formatDate('M d', d1)); // Jan 19\n            $('#to   ').html($.datepicker.formatDate('M d', d2)); // Jan 19\n            $('#fromB').html($.datepicker.formatDate('yymmdd', d1)); // yyyymmdd\n            $('#toB  ').html($.datepicker.formatDate('yymmdd', d2)); // yyyymmdd\n            $('#datepickL').val($.datepicker.formatDate('mm/dd/yy', d1)); // mm/dd/yyyy\n            $('#datepickR').val($.datepicker.formatDate('mm/dd/yy', d2)); // mm/dd/yyyy\n\n\n            clearTimeout(Timegraf.hideL);\n            clearTimeout(Timegraf.hideR);\n\n            var foff = { left: $('#slider .ptrL').offset().left - $('#from').width() + 10 };\n            var toff = { left: $('#slider .ptrR').offset().left\n              /* eslint-disable  brace-style */\n            };$('#from').offset(foff).show(0, function () {\n              Timegraf.hideL = setTimeout(function () {\n                return $('#from').hide('slow');\n              }, 2000);\n            });\n            $('#to  ').offset(toff).show(0, function () {\n              Timegraf.hideR = setTimeout(function () {\n                return $('#to  ').hide('slow');\n              }, 2000);\n            });\n            /* eslint-enable  brace-style */\n\n            Timegraf.pinkme(ui.values[0], ui.values[1]);\n          },\n          stop: function stop(event, ui) {\n            Timegraf.adjust(ui.values[0], ui.values[1]);\n            Timegraf.timechanged = true;\n            var now = location.href.replace(/^http[s]*:/, '');\n            var become = '//' + location.host + Timegraf.c.q + Timegraf.args();\n\n            if (now !== become) {\n              log(now);\n              log(become);\n\n              // make it more obvious that search is being issued\n              $('#opscreen1M').remove();\n              $('body').append($('<div id=\"opscreen1M\"/>'));\n              $('#opscreen1M').show('slow', function () {\n                location.href = become;\n              });\n            }\n          }\n        });\n\n        if (left > 0 || rite > 0) Timegraf.pinkme(left, rite);\n      }\n    }, {\n      key: 'pinkme',\n      value: function pinkme(left, rite) {\n        var x = Math.round(Timegraf.c.GRAPH_PADDING / 2);\n        var pinkL = Math.round(left / Timegraf.c.maxSlide * Timegraf.c.realGraphWidth) + 2;\n        var pinkR = Math.round(rite / Timegraf.c.maxSlide * Timegraf.c.realGraphWidth) - 2 + x;\n\n        var rect = 'rect(0px,' + pinkR + 'px,' + Timegraf.c.GRAPH_HEIGHT + 'px,' + pinkL + 'px)';\n        log(rect);\n        $('#timegraf-clip').css('clip', rect);\n\n        var ttl = 'click and drag this to change time period';\n        var attr = { 'data-title': ttl, 'data-toggle': 'tooltip', 'data-placement': 'bottom' };\n        $($('#slider a').get(0)).attr(attr).removeClass('ui-state-default').addClass('ptrL');\n        $($('#slider a').get(1)).attr(attr).removeClass('ui-state-default').addClass('ptrR');\n\n        Timegraf.adjust(left, rite);\n      }\n    }, {\n      key: 'adjust',\n      value: function adjust(left, rite) {\n        var onedayspan = rite - left < 2;\n\n        log('left:', left, 'rite:', rite);\n\n        if (onedayspan) {\n          $('#to').hide();\n          $('#slider .ui-widget-header').css('borderColor', '#d33682');\n          $('#slider .ui-widget-header').css('border-left-width', 0);\n        } else {\n          $('#slider .ui-widget-header').css('borderColor', '#d33682');\n          $('#slider .ui-widget-header').css('border-left-width', 2);\n        }\n      }\n    }, {\n      key: 'args',\n      value: function args() {\n        if (!Timegraf.timechanged) return '';\n        var from2 = $('#fromB').text().trim();\n        var to2 = $('#toB  ').text().trim();\n        var end = from2 === to2 ? '' : '-' + to2;\n        return '&time=' + from2 + end; // TVII\n      }\n    }]);\n\n    return Timegraf;\n  }(); // end class Timegraf\n\n\n  Timegraf.timechanged = false;\n  Timegraf.c = {};\n  (function defineStatsApi() {\n    /**\n     * @param {String} source\n     * @return {String}\n     */\n    function capitalizeFirstLetter(source) {\n      return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n\n    /**\n     * A geographic region (either a country or a state/province within a country) for the\n     * purposes of site usage statistics.\n     */\n\n    var StatsRegion = function () {\n      /**\n       * @param {Object} props\n       * @param {String} props.code\n       * @param {String} props.name\n       */\n      function StatsRegion(_ref5) {\n        var code = _ref5.code,\n            name = _ref5.name;\n\n        _classCallCheck(this, StatsRegion);\n\n        this.code = code;\n        this.name = name;\n      }\n\n      /**\n       * @return {String}\n       */\n\n\n      _createClass(StatsRegion, [{\n        key: 'formattedName',\n        get: function get() {\n          return capitalizeFirstLetter(this.name);\n        }\n      }]);\n\n      return StatsRegion;\n    }();\n\n    /**\n     * A count of site usage from a particular state/province.\n     */\n\n\n    var GeoCount = function () {\n      /**\n       * @param {Object} props\n       * @param {String} props.count\n       * @param {String} props.country\n       * @param {String} props.state\n       */\n      function GeoCount(_ref6) {\n        var count = _ref6.count,\n            country = _ref6.country,\n            state = _ref6.state;\n\n        _classCallCheck(this, GeoCount);\n\n        this.count = parseInt(count, 10);\n        this.country = country;\n        this.state = state;\n      }\n\n      /**\n       * @return {String}\n       */\n\n\n      _createClass(GeoCount, [{\n        key: 'formattedCount',\n        get: function get() {\n          return AJS.addCommas(this.count);\n        }\n      }]);\n\n      return GeoCount;\n    }();\n\n    /**\n     * @param {Object} data\n     * @return {GeoCount}\n     */\n\n\n    function createGeoCountFromApiData(data) {\n      return new GeoCount({\n        count: data.sum_count_value,\n\n        country: new StatsRegion({\n          code: data.geo_country,\n          name: data.country\n        }),\n\n        state: new StatsRegion({\n          code: data.geo_state,\n          name: data.state\n        })\n      });\n    }\n\n    /**\n     * Parse API data and produce a list of GeoCount objects, with counts made by combining sums\n     * from various kinds of user agents.\n     *\n     * @param {Object}   data must have key counts_geo\n     * @param {Object}   options\n     * @param {String[]} options.uaKinds list of user-agent kinds to include\n     * @return {GeoCount[]}\n     */\n    function createCombinedGeoCountsFromApiData(data) {\n      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref7$uaKinds = _ref7.uaKinds,\n          uaKinds = _ref7$uaKinds === undefined ? ['robot', 'non_robot', 'unrecognized'] : _ref7$uaKinds;\n\n      if (!data.counts_geo) throw new RangeError(\"API response doesn't contain property 'counts_geo'.\");\n\n      /**\n       * @param {String} uaKind\n       * @return {Boolean}\n       */\n      function uaKindIsAllowed(uaKind) {\n        return uaKinds.indexOf(uaKind) !== -1;\n      }\n\n      var countsMap = {};\n\n      for (var i = 0; i < data.counts_geo.length; i++) {\n        var countData = data.counts_geo[i];\n\n        // Whitelist user agents and skip unknown countries.\n        if (uaKindIsAllowed(countData.ua_kind) && countData.country !== 'unknown') {\n          var mapKey = countData.geo_country + '_' + countData.geo_state;\n\n          // Add to an existing count or create a new one.\n          if (countsMap[mapKey]) countsMap[mapKey].count += countData.sum_count_value;else countsMap[mapKey] = createGeoCountFromApiData(countData);\n        }\n      }\n\n      return Object.keys(countsMap).map(function (key) {\n        return countsMap[key];\n      });\n    }\n\n    var apiBaseUrl = 'https://be-api.us.archive.org/views/v1';\n\n    /**\n     * Interface for fetching site usage stats from the stats API.\n     */\n    AJS.StatsApiClient = function () {\n      function StatsApiClient() {\n        _classCallCheck(this, StatsApiClient);\n      }\n\n      _createClass(StatsApiClient, null, [{\n        key: 'getGeoCounts',\n\n        /**\n         * @param {String} identifier\n         * @param {Object} options\n         * @param {Number} options.days\n         * @param {Number} options.limit\n         * @return {jQuery.Promise<GeoData[]>}\n         */\n        value: function getGeoCounts(identifier) {\n          var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n              _ref8$days = _ref8.days,\n              days = _ref8$days === undefined ? 30 : _ref8$days,\n              _ref8$limit = _ref8.limit,\n              limit = _ref8$limit === undefined ? 100 : _ref8$limit,\n              _ref8$uaKinds = _ref8.uaKinds,\n              uaKinds = _ref8$uaKinds === undefined ? ['robot', 'non_robot', 'unrecognized'] : _ref8$uaKinds;\n\n          var url = apiBaseUrl + '/detail/collection/' + identifier + '/' + days;\n\n          return $.get(url).then(function (data) {\n            try {\n              return createCombinedGeoCountsFromApiData(data, { uaKinds: uaKinds }).sort(function (count1, count2) {\n                return count1.count < count2.count ? 1 : -1;\n              }).slice(0, limit);\n            } catch (error) {\n              return $.Deferred().reject(error);\n            }\n          });\n        }\n      }]);\n\n      return StatsApiClient;\n    }();\n  })();\n\n  /* eslint-disable */\n\n  /**\n   * React component, Creative Commons license selector link.\n   * Shows a \"remove\" link when a license is selected.\n   */\n  AJS.CreativeCommonsLicenseLink = React.createClass({\n    displayName: 'CreativeCommonsLicenseLink',\n\n    DEFAULT_LINK_TEXT: 'Choose license',\n\n    defaultProps: {\n      licenseName: undefined,\n      licenseSelected: false\n    },\n\n    getInitialState: function getInitialState() {\n      return {\n        licenseSelected: this.props.licenseSelected,\n        linkText: this.props.licenseName || this.DEFAULT_LINK_TEXT,\n        oldLicenseName: this.props.licenseName\n      };\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(newProps) {\n      this.setState({\n        licenseSelected: newProps.licenseSelected,\n        linkText: newProps.licenseName || this.DEFAULT_LINK_TEXT\n      });\n    },\n    removeLicense: function removeLicense() {\n      this.setState({\n        licenseSelected: false,\n        linkText: this.DEFAULT_LINK_TEXT\n      });\n\n      this.removeRetainLicenseInput();\n    },\n\n\n    /**\n     * This is left over from the old, non-React version of this widget, so\n     * we need to reach outside of the React component and change another DOM node.\n     */\n    removeRetainLicenseInput: function removeRetainLicenseInput() {\n      var formItem = document.getElementById('retaincclicense');\n      formItem.parentNode.removeChild(formItem);\n    },\n    wasLicensedChanged: function wasLicensedChanged() {\n      return this.state.oldLicenseName !== this.state.linkText;\n    },\n    getLicenseChangeMessage: function getLicenseChangeMessage() {\n      if (this.state.oldLicenseName && this.wasLicensedChanged()) {\n        return 'Change license (currently ' + this.state.oldLicenseName + ')';\n      }\n\n      return '';\n    },\n    render: function render() {\n      return React.createElement(\n        'span',\n        null,\n        React.createElement(\n          AJS.PopupLink,\n          {\n            href: this.props.href,\n            height: '600',\n            width: '600',\n            title: this.getLicenseChangeMessage()\n          },\n          this.state.linkText\n        ),\n        ' ',\n        this.state.licenseSelected && React.createElement(\n          'span',\n          null,\n          '(',\n          React.createElement(\n            'button',\n            {\n              type: 'button',\n              className: 'creativecommons-remove-license-button',\n              onClick: this.removeLicense\n            },\n            'remove'\n          ),\n          ')'\n        )\n      );\n    }\n  });\n  /* eslint-enable */\n\n  AJS.MORFreact = React.createClass({\n    displayName: 'MORFreact',\n\n    FACETS_PER_PAGE: 100,\n\n    getInitialState: function getInitialState() {\n      return {\n        page: 1,\n        href: '',\n        mounted: false,\n        hdr: '',\n        options: []\n      };\n    },\n    getFacets: function getFacets() {\n      var self = this;\n      // xxxx Math.rand anti-browser caching etc??\n      $.getJSON(this.props.href + '&headless=1&output=json', function (ret) {\n        // eslint-disable-next-line  no-param-reassign\n        ret.href = self.props.href;\n        // eslint-disable-next-line  no-param-reassign\n        ret.mounted = true;\n        log(ret);\n\n        self.setState(ret);\n\n        // now check all the boxes that user has previously/currently checked\n        for (var j = 0; j < ret.checked.length; j++) {\n          for (var i = 0; i < self.state.options.length; i++) {\n            var val = self.state.options[i].val;\n            // NOTE: == not === so \"1970\"==1970 (eg: year facet)\n            // eslint-disable-next-line  eqeqeq\n\n            if (ret.checked[j] == val) {\n              self.refs[val].checked = true;\n              break;\n            }\n          }\n        }\n      });\n    },\n    componentDidMount: function componentDidMount() {\n      // Our component is visible in page now, effectively empty\n      // Now ask server for facets to render in\n      log('mounted');\n      this.getFacets();\n    },\n    pageClick: function pageClick(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      // if user clicked on the |> \"next page\" icon, advance one page;\n      // else they clicked on a specific page number to go to\n      var page = $(e.target).text() === '' ? this.state.page + 1 : parseInt($(e.target).text(), 10);\n      this.setState({ page: page });\n    },\n    submitClick: function submitClick() {\n      log('submitted');\n      var url = this.state.submit;\n      for (var i = 0; i < this.state.options.length; i++) {\n        var val = this.state.options[i].val;\n\n        if (this.refs[val].checked) {\n          var tmp = '&and[]=' + this.state.morf + '%3A\"' + encodeURIComponent(val) + '\"';\n          log('checked', val, '=>', tmp);\n          url += tmp;\n        }\n      }\n      log(url);\n      location.href = url;\n    },\n    render: function render() {\n      var _this = this;\n\n      log('rendering..');\n      // log(this.props.href)\n      // log(this.state.href)\n\n      var loading = !this.state.mounted;\n      if (this.state.href !== '' && this.props.href !== this.state.href) {\n        loading = true;\n        this.getFacets();\n      }\n\n      $('#morf-modal .modal-title').html(loading ? '' : this.state.hdr);\n\n      var min = (this.state.page - 1) * this.FACETS_PER_PAGE;\n      var max = min + this.FACETS_PER_PAGE - 1;\n      var options = this.state.options.map(function (option, n) {\n        return React.createElement(\n          'div',\n          { className: n >= min && n <= max && !loading ? 'farow' : 'farow hidden', key: option.val },\n          React.createElement(\n            'div',\n            { className: 'facell' },\n            React.createElement('input', {\n              onClick: _this.handleClick,\n              type: 'checkbox',\n              name: option.val,\n              value: option.val,\n              ref: option.val\n            })\n          ),\n          React.createElement(\n            'div',\n            { className: 'facell' },\n            AJS.addCommas(option.n)\n          ),\n          React.createElement(\n            'div',\n            { className: 'facell' },\n            option.txt ? option.txt : option.val\n          )\n        );\n      });\n\n      var paging = [];\n      var npages = Math.ceil(this.state.options.length / this.FACETS_PER_PAGE);\n      var loadnote = '';\n      if (loading) {\n        loadnote = React.createElement(\n          'div',\n          { style: { 'font-style': 'italic', margin: '25px', 'text-align': 'center' } },\n          'loading filters...',\n          React.createElement('img', { alt: '', style: { width: '25px' }, key: loading, src: '/images/loading.gif' })\n        );\n      } else {\n        var page = 1;\n        for (page = 1; page <= npages; page++) {\n          if (this.state.page === page) paging.push(React.createElement(\n            'div',\n            { key: 'p'.concat(page), className: 'topinblock' },\n            page\n          ));else paging.push(React.createElement(\n            'a',\n            { href: '#'.concat(page), key: 'p'.concat(page), onClick: this.pageClick },\n            page\n          ));\n          paging.push(' ');\n        }\n        if (this.state.page < npages) {\n          var tmp = React.createElement(\n            'a',\n            { href: '#'.concat(page), key: 'pp'.concat(page), onClick: this.pageClick },\n            React.createElement('span', { className: 'iconochive-right-solid' })\n          );\n          paging.push(tmp);\n        }\n      }\n      return React.createElement(\n        'div',\n        { id: 'morf-page' },\n        React.createElement(\n          'form',\n          null,\n          React.createElement(\n            'div',\n            { className: 'fatable facet-subject' },\n            options\n          ),\n          loadnote,\n          React.createElement(\n            'div',\n            { id: 'morf-paging' },\n            paging\n          ),\n          React.createElement(\n            'center',\n            null,\n            React.createElement('input', { className: loading ? 'btn-primary hidden' : 'btn-primary', type: 'button', value: 'Apply your filters', onClick: this.submitClick })\n          )\n        )\n      );\n    }\n  }); // end MORFreact\n\n\n  /** ******************************************************************************************\n   *\n   *\n   *    THIRD PARTY INCLUDES WE CANT LIVE WITHOUT! 8-)\n   *\n   *\n   ******************************************************************************************** */\n\n  /* eslint-disable */\n  /**\n   * Cookie plugin\n   *\n   * Copyright (c) 2006 Klaus Hartl (stilbuero.de)\n   * Dual licensed under the MIT and GPL licenses:\n   * http://www.opensource.org/licenses/mit-license.php\n   * http://www.gnu.org/licenses/gpl.html\n   *\n   */\n\n  /**\n   * Create a cookie with the given name and value and other optional parameters.\n   *\n   * @example $.cookie('the_cookie', 'the_value');\n   * @desc Set the value of a cookie.\n   * @example $.cookie('the_cookie', 'the_value', { expires: 7, path: '/', domain: 'jquery.com', secure: true });\n   * @desc Create a cookie with all available options.\n   * @example $.cookie('the_cookie', 'the_value');\n   * @desc Create a session cookie.\n   * @example $.cookie('the_cookie', null);\n   * @desc Delete a cookie by passing null as value. Keep in mind that you have to use the same path and domain\n   *       used when the cookie was set.\n   *\n   * @param String name The name of the cookie.\n   * @param String value The value of the cookie.\n   * @param Object options An object literal containing key/value pairs to provide optional cookie attributes.\n   * @option Number|Date expires Either an integer specifying the expiration date from now on in days or a Date object.\n   *                             If a negative value is specified (e.g. a date in the past), the cookie will be deleted.\n   *                             If set to null or omitted, the cookie will be a session cookie and will not be retained\n   *                             when the the browser exits.\n   * @option String path The value of the path atribute of the cookie (default: path of page that created the cookie).\n   * @option String domain The value of the domain attribute of the cookie (default: domain of page that created the cookie).\n   * @option Boolean secure If true, the secure attribute of the cookie will be set and the cookie transmission will\n   *                        require a secure protocol (like HTTPS).\n   * @type undefined\n   *\n   * @name $.cookie\n   * @cat Plugins/Cookie\n   * @author Klaus Hartl/klaus.hartl@stilbuero.de\n   */\n\n  /**\n   * Get the value of a cookie with the given name.\n   *\n   * @example $.cookie('the_cookie');\n   * @desc Get the value of a cookie.\n   *\n   * @param String name The name of the cookie.\n   * @return The value of the cookie.\n   * @type String\n   *\n   * @name $.cookie\n   * @cat Plugins/Cookie\n   * @author Klaus Hartl/klaus.hartl@stilbuero.de\n   */\n  $.cookie = function (name, value, options) {\n    if (typeof value != 'undefined') {\n      // name and value given, set cookie\n      options = options || {};\n      if (value === null) {\n        value = '';\n        options.expires = -1;\n      }\n      var expires = '';\n      if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {\n        var date;\n        if (typeof options.expires == 'number') {\n          date = new Date();\n          date.setTime(date.getTime() + options.expires * 24 * 60 * 60 * 1000);\n        } else {\n          date = options.expires;\n        }\n        expires = '; expires=' + date.toUTCString(); // use expires attribute, max-age is not supported by IE\n      }\n\n      // CAUTION: Needed to parenthesize options.path and options.domain\n      // in the following expressions, otherwise they evaluate to undefined\n      // in the packed version for some reason...\n      var path = options.path ? '; path=' + options.path : '';\n      var domain = options.domain ? '; domain=' + options.domain : '';\n      var secure = options.secure ? '; secure' : '';\n\n      if (navigator.userAgent.indexOf('MSIE 9.') > 0) {\n        // IE9 sucks and can kiss it (tracey may2012)\n        domain = '';\n        path = '';\n      }\n\n      document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');\n      return true;\n    } else {\n      // only name given, get cookie\n      var cookieValue = null;\n      if (document.cookie && document.cookie != '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n          var cookie = $.trim(cookies[i]);\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) == name + '=') {\n            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n            break;\n          }\n        }\n      }\n      return cookieValue;\n    }\n  };\n  /* eslint-enable */\n\n  // (adapted) from http://www.queness.com/code-snippet/6853/center-an-element-on-the-screen-using-jquery\n  // then you can use it like:\n  //      $(\"#gridmini\").center()\n\n  // eslint-disable-next-line  no-param-reassign\n  $.fn.center = function jquery_extension_center() {\n    var myheight = this.height() + parseInt(this.css('padding-top'), 10) + parseInt(this.css('padding-bottom'), 10);\n\n    log('myheight', myheight);\n    log('mywidth', this.width());\n    log('w.height', $(window).height(), 'w.width', $(window).width(), 'w.scrollTop', $(window).scrollTop(), 'w.scrollLeft', $(window).scrollLeft());\n\n    var top = void 0;\n    var left = void 0;\n    if (AJS.ios) {\n      var vpW = window.innerWidth;\n      var vpH = window.innerHeight;\n\n      log('vpH', vpH);\n      log('vpW', vpW);\n\n      top = (vpH - myheight) / 2 + $(window).scrollTop();\n      left = (vpW - this.width()) / 2 + $(window).scrollLeft();\n    } else {\n      top = ($(window).height() - myheight) / 2;\n      left = ($(window).width() - this.width()) / 2;\n    }\n\n    // for small viewports like iphone, when centering popups, ensure minimally +20px\n    top = Math.max(20, top);\n    left = Math.max(20, left);\n\n    this.css({\n      position: AJS.ios ? 'absolute' : 'fixed',\n      display: 'block',\n      top: top,\n      left: left\n    });\n\n    return this;\n  }; // end $.fn.center\n\n\n  $(function () {\n    // Use this global hack, by adding class 'accessible-link' to any mouse-only element div/img\n    AJS.makeMouseElementAccessible('.accessible-link');\n\n    AJS.setUpActionTracking(); // Must be before other form submit handlers are assigned\n    AJS.nav_tophat_setup();\n    AJS.nav_tophat_wb_setup();\n\n    // UI component initialization\n    AJS.setupPopupLink();\n    AJS.setUpCreativeCommonsLicenseLink();\n    AJS.setUpSearchForms();\n    AJS.setUpBookReaderIframe();\n    AJS.setUpAccordions();\n\n    /* global  archive_setup */\n    if (typeof archive_setup !== 'undefined') {\n      // when DOM loaded/stable, do some setup\n      $(function () {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = archive_setup[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var fn = _step.value;\n\n            fn();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n\n    AJS.footer();\n  });\n\n  // promote to globals:\n  window.AJS = AJS;\n  window.Timegraf = Timegraf;\n})(jQuery);"},364:function(e,n,t){t(9)(t(363))},365:function(e,n,t){"use strict";t(364)},9:function(e,n){e.exports=function(e){function n(e){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",e)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(e):"undefined"!=typeof eval?eval.call(null,e):n("EvalError: No eval function available")}catch(e){n(e)}}}});
//# sourceMappingURL=archive.min.js.map